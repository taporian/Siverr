{"ast":null,"code":"import axios from 'axios';\nimport { SIGN_IN_ADMIN_FAILURE, SIGN_IN_ADMIN_REQUEST, SIGN_IN_ADMIN_SUCCESS, SIGN_UP_ADMIN_FAILURE, SIGN_UP_ADMIN_REQUEST, SIGN_UP_ADMIN_SUCCESS, SIGN_OUT_ADMIN_FAILURE, SIGN_OUT_ADMIN_REQUEST, SIGN_OUT_ADMIN_SUCCESS, GET_ALL_SERVICES_PENDING_REQUEST_ADMIN, GET_ALL_SERVICES_PENDING_SUCCESS_ADMIN, GET_ALL_SERVICES_PENDING_FAILURE_ADMIN, GET_ALL_SERVICES_ACCEPTED_REQUEST_ADMIN, GET_ALL_SERVICES_ACCEPTED_SUCCESS_ADMIN, GET_ALL_SERVICES_ACCEPTED_FAILURE_ADMIN, GET_ALL_SERVICES_REJECTED_REQUEST_ADMIN, GET_ALL_SERVICES_REJECTED_SUCCESS_ADMIN, GET_ALL_SERVICES_REJECTED_FAILURE_ADMIN, REJECT_SERVICE_PENDING_REQUEST_ADMIN, REJECT_SERVICE_PENDING_SUCCESS_ADMIN, REJECT_SERVICE_PENDING_FAILED_ADMIN, ACCCEPT_SERVICE_REQUEST_ADMIN, ACCCEPT_SERVICE_SUCCESS_ADMIN, ACCCEPT_SERVICE_FAILED_ADMIN, SIGN_IN_USER_FAILURE, SIGN_IN_USER_REQUEST, SIGN_IN_USER_SUCCESS, SIGN_UP_USER_FAILURE, SIGN_UP_USER_REQUEST, SIGN_UP_USER_SUCCESS, SIGN_OUT_USER_FAILURE, SIGN_OUT_USER_REQUEST, SIGN_OUT_USER_SUCCESS, ACCEPTED, REJECTED, PENDING, GET_ALL_CATEGORY_ACCEPTED_REQUEST_USER, GET_ALL_CATEGORY_ACCEPTED_SUCCESS_USER, GET_ALL_CATEGORY_ACCEPTED_FAILED_USER, GET_SUBCATEGORY_BY_CATEGORY_ID_REQUEST_USER, GET_SUBCATEGORY_BY_CATEGORY_ID_SUCCESS_USER, GET_SUBCATEGORY_BY_CATEGORY_ID_FAILED_USER, EMPTY_SUBCATEGORY, POST_CREATE_SERVICE_REQUEST_USER, POST_CREATE_SERVICE_SUCCESS_USER, POST_CREATE_SERVICE_FAILED_USER, GET_ALL_CATEGORY_REQUEST_USER, GET_ALL_CATEGORY_SUCCESS_USER, GET_ALL_CATEGORY_FAILED_USER, GET_ROOMS_REQUEST_USER, GET_ROOMS_SUCCESS_USER, GET_ROOMS_FAILED_USER, CONTACT_SELLER_REQUEST_USER, CONTACT_SELLER_SUCCESS_USER, CONTACT_SELLER_FAILED_USER, POST_ORDER_REQUEST_USER, POST_ORDER_SUCCESS_USER, POST_ORDER_FAILED_USER, GET_MY_ORDER_PENDING_REQUEST_USER, GET_MY_ORDER_PENDING_SUCCESS_USER, GET_MY_ORDER_PENDING_FAILED_USER, GET_MY_ORDER_ACCEPTED_REQUEST_USER, GET_MY_ORDER_ACCEPTED_SUCCESS_USER, GET_MY_ORDER_ACCEPTED_FAILED_USER, GET_MY_ORDER_REJECTED_REQUEST_USER, GET_MY_ORDER_REJECTED_SUCCESS_USER, GET_MY_ORDER_REJECTED_FAILED_USER, GET_RECEIVED_ORDER_PENDING_REQUEST_USER, GET_RECEIVED_ORDER_PENDING_SUCCESS_USER, GET_RECEIVED_ORDER_PENDING_FAILED_USER, GET_RECEIVED_ORDER_ACCEPTED_REQUEST_USER, GET_RECEIVED_ORDER_ACCEPTED_SUCCESS_USER, GET_RECEIVED_ORDER_ACCEPTED_FAILED_USER, GET_ALL_SUCATEGORY_CATEGORY_SERVICE_REQUEST_GUEST, GET_ALL_SUCATEGORY_CATEGORY_SERVICE_SUCCESS_GUEST, GET_ALL_SUCATEGORY_CATEGORY_SERVICE_FAILED_GUEST, ACCEPTED_SERVICES, GET_ALL_SUB_ILLUSTRATOR_SERVICE_REQUEST_GUEST, GET_ALL_SUB_ILLUSTRATOR_SERVICE_SUCCESS_GUEST, GET_ALL_SUB_ILLUSTRATOR_SERVICE_FAILED_GUEST } from './action-types';\nimport { toast } from \"react-toastify\";\nimport { URL_Admin, URL_Guest, URL_User } from \"../components/URL\"; //////////////////////////////ADMIN/////////////////////////////////////////////////////////\n/////////////////////REJECT PENDING REQUEST /////////////////////////////////\n\nconst rejectServiceRequestAdmin = () => {\n  return {\n    type: REJECT_SERVICE_PENDING_REQUEST_ADMIN\n  };\n};\n\nconst rejectServiceSuccessAdmin = rejectServiceAdminData => {\n  return {\n    type: REJECT_SERVICE_PENDING_SUCCESS_ADMIN,\n    payload: {\n      rejectServiceAdminData\n    }\n  };\n};\n\nconst rejectServiceFailureAdmin = rejectServiceDataError => {\n  return {\n    type: REJECT_SERVICE_PENDING_FAILED_ADMIN,\n    payload: rejectServiceDataError\n  };\n};\n\nexport const rejectServiceAdmin = (reason_for_rejection, service_id) => {\n  return async function (dispatch) {\n    console.log('reason_for_rejection', reason_for_rejection);\n    dispatch(rejectServiceRequestAdmin());\n\n    try {\n      const response = await axios({\n        method: \"post\",\n        url: URL_Admin + `/rejectPendingServices/${service_id}`,\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"ADMIN-TOKEN\")}`\n        },\n        data: reason_for_rejection\n      });\n      const data = response.data;\n\n      if (response.data.message === \"You must be logged in as Admin\") {\n        dispatch(signOutAdmin());\n      } else {\n        // toast.success(data.message);\n        dispatch(rejectServiceSuccessAdmin(data));\n      }\n    } catch (rejectServiceDataError) {\n      dispatch(rejectServiceFailureAdmin(rejectServiceDataError));\n    }\n  };\n}; ////////////ACCEPT PENDING REQUEST ////////////////////////\n\nconst accepteServiceRequestAdmin = () => {\n  return {\n    type: ACCCEPT_SERVICE_REQUEST_ADMIN\n  };\n};\n\nconst accepteServiceSuccessAdmin = acceptedServiceAdminData => {\n  return {\n    type: ACCCEPT_SERVICE_SUCCESS_ADMIN,\n    payload: {\n      acceptedServiceAdminData\n    }\n  };\n};\n\nconst accepteServiceFailureAdmin = acceptedServiceDataError => {\n  return {\n    type: ACCCEPT_SERVICE_FAILED_ADMIN,\n    payload: acceptedServiceDataError\n  };\n};\n\nexport const acceptServiceAdmin = service_id => {\n  console.log('hey');\n  return async function (dispatch) {\n    dispatch(accepteServiceRequestAdmin());\n\n    try {\n      const response = await axios({\n        method: \"put\",\n        url: URL_Admin + `/acceptService/${service_id}`,\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"ADMIN-TOKEN\")}`\n        }\n      });\n      const data = response.data;\n\n      if (response.data.message === \"You must be logged in as Admin\") {\n        dispatch(signOutAdmin());\n      } else {\n        toast.success(data.message);\n        dispatch(accepteServiceSuccessAdmin(data));\n      }\n    } catch (acceptedServiceDataError) {\n      dispatch(accepteServiceFailureAdmin(acceptedServiceDataError));\n    }\n  };\n}; ////////TOGGLE SCREENS/////////\n\nexport const pendingScreen = () => {\n  return {\n    type: PENDING\n  };\n};\nexport const rejectedScreen = () => {\n  return {\n    type: REJECTED\n  };\n};\nexport const acceptedScreen = () => {\n  return {\n    type: ACCEPTED\n  };\n}; // GET ALL REJECTED SERVICES///\n\nconst fetchAllRejectedServicesRequest = () => {\n  return {\n    type: GET_ALL_SERVICES_REJECTED_REQUEST_ADMIN,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchAllRejectedServicesSuccess = rejectedServiceData => {\n  return {\n    type: GET_ALL_SERVICES_REJECTED_SUCCESS_ADMIN,\n    payload: {\n      rejectedServiceData\n    }\n  };\n};\n\nconst fetchAllRejectedServicesFailure = errorRejected => {\n  return {\n    type: GET_ALL_SERVICES_REJECTED_FAILURE_ADMIN,\n    payload: errorRejected\n  };\n};\n\nexport const fetchRejectedServices = payload => {\n  return async function (dispatch) {\n    dispatch(fetchAllRejectedServicesRequest());\n\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: URL_Admin + '/getAllServiceRejected',\n        data: payload,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"ADMIN-TOKEN\")}`\n        }\n      });\n\n      if (res.data.message === \"You must be logged in as Admin\") {\n        dispatch(signOutAdmin());\n      } else {\n        const result = res.data.data;\n        dispatch(fetchAllRejectedServicesSuccess(result));\n      }\n    } catch (errorRejected) {\n      dispatch(fetchAllRejectedServicesFailure(errorRejected.response.data));\n    }\n  };\n}; // GET ALL ACCEPTED SERVICES///\n\nconst fetchAllAcceptedServicesRequest = () => {\n  return {\n    type: GET_ALL_SERVICES_ACCEPTED_REQUEST_ADMIN,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchAllAcceptedServicesSuccess = acceptedServiceData => {\n  return {\n    type: GET_ALL_SERVICES_ACCEPTED_SUCCESS_ADMIN,\n    payload: {\n      acceptedServiceData\n    }\n  };\n};\n\nconst fetchAllAcceptedServicesFailure = errorAccepted => {\n  return {\n    type: GET_ALL_SERVICES_ACCEPTED_FAILURE_ADMIN,\n    payload: errorAccepted\n  };\n};\n\nexport const fetchAcceptedServices = payload => {\n  return async function (dispatch) {\n    dispatch(fetchAllAcceptedServicesRequest());\n\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: URL_Admin + '/getAllServiceAccepted',\n        data: payload,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"ADMIN-TOKEN\")}`\n        }\n      });\n\n      if (res.data.message === \"You must be logged in as Admin\") {\n        dispatch(signOutAdmin());\n      } else {\n        const result = res.data.data;\n        dispatch(fetchAllAcceptedServicesSuccess(result));\n      }\n    } catch (errorAccepted) {\n      dispatch(fetchAllAcceptedServicesFailure(errorAccepted.response.data));\n    }\n  };\n}; //// GET ALL PENDING SERVICES/////\n\nconst fetchAllPendingServicesRequest = () => {\n  return {\n    type: GET_ALL_SERVICES_PENDING_REQUEST_ADMIN,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchAllPendingServicesSuccess = pendingServiceData => {\n  return {\n    type: GET_ALL_SERVICES_PENDING_SUCCESS_ADMIN,\n    payload: {\n      pendingServiceData\n    }\n  };\n};\n\nconst fetchAllPendingServicesFailure = errorPending => {\n  return {\n    type: GET_ALL_SERVICES_PENDING_FAILURE_ADMIN,\n    payload: errorPending\n  };\n};\n\nexport const fetchPendingServices = payload => {\n  return async function (dispatch) {\n    dispatch(fetchAllPendingServicesRequest());\n\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: URL_Admin + '/getAllServicePending',\n        data: payload,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"ADMIN-TOKEN\")}`\n        }\n      });\n\n      if (res.data.message === \"You must be logged in as Admin\") {\n        dispatch(signOutAdmin());\n      } else {\n        const result = res.data.data;\n        dispatch(fetchAllPendingServicesSuccess(result)); // dispatch(fetchAllAcceptedServicesFailure(\"\")); \n      }\n    } catch (errorPending) {\n      dispatch(fetchAllPendingServicesFailure(errorPending.response.data));\n    }\n  };\n}; // SIGN UP ADMIN\n\nconst signUpRequestAdmin = () => {\n  return {\n    type: SIGN_UP_ADMIN_REQUEST\n  };\n};\n\nconst signUpSuccessAdmin = user => {\n  return {\n    type: SIGN_UP_ADMIN_SUCCESS,\n    payload: {\n      user\n    }\n  };\n};\n\nconst signUpFailureAdmin = error => {\n  return {\n    type: SIGN_UP_ADMIN_FAILURE,\n    payload: error\n  };\n};\n\nexport const signUpAdmin = (user, history) => {\n  return async function (dispatch) {\n    dispatch(signUpRequestAdmin());\n\n    try {\n      const res = await axios({\n        method: \"post\",\n        url: URL_Admin + '/register',\n        data: user\n      });\n      const {\n        data\n      } = res.data;\n      dispatch(signUpSuccessAdmin(data));\n      history.push('/adminhome');\n    } catch (error) {\n      dispatch(signUpFailureAdmin(error));\n    }\n  };\n}; //Sign in  ADMIN\n\nconst signInRequestAdmin = () => {\n  return {\n    type: SIGN_IN_ADMIN_REQUEST\n  };\n};\n\nconst signInSuccessAdmin = payload => {\n  return {\n    type: SIGN_IN_ADMIN_SUCCESS,\n    payload\n  };\n};\n\nconst signInFailureAdmin = error => {\n  return {\n    type: SIGN_IN_ADMIN_FAILURE,\n    payload: error\n  };\n};\n\nexport const signinAdmin = (payload, history) => {\n  return async function (dispatch) {\n    dispatch(signInRequestAdmin);\n\n    try {\n      const res = await axios({\n        method: \"POST\",\n        url: URL_Admin + \"/login\",\n        data: payload,\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        }\n      });\n      const {\n        access_token,\n        name\n      } = res.data;\n      localStorage.setItem(\"ADMIN-NAME\", name);\n      localStorage.setItem(\"ADMIN-TOKEN\", access_token);\n      dispatch(signInSuccessAdmin({\n        access_token,\n        name\n      }));\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        dispatch(signInFailureAdmin(error.response.data));\n      } else {\n        dispatch(signUpFailureAdmin(error));\n      }\n    }\n  };\n}; // sign out ADMIN\n\nexport const signOutRequestAdmin = () => {\n  return {\n    type: SIGN_OUT_ADMIN_REQUEST\n  };\n};\nexport const signOutSuccessAdmin = () => {\n  return {\n    type: SIGN_OUT_ADMIN_SUCCESS\n  };\n};\nexport const signOutFailureAdmin = () => {\n  return {\n    type: SIGN_OUT_ADMIN_FAILURE\n  };\n};\nexport const signOutAdmin = history => {\n  return async function (dispatch) {\n    dispatch(signOutRequestAdmin());\n\n    try {\n      const res = await axios({\n        method: \"POST\",\n        url: URL_Admin + \"/logout\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"ADMIN-TOKEN\")}`\n        }\n      });\n      localStorage.removeItem(\"ADMIN-TOKEN\");\n      localStorage.removeItem(\"ADMIN-NAME\");\n      history.push('/admin/signin');\n      toast.success(\"Logged out\");\n    } catch (error) {\n      if (localStorage.getItem(\"ADMIN-TOKEN\") !== null) {\n        dispatch(signOutFailureAdmin());\n      } else {\n        dispatch(signOutSuccessAdmin());\n      }\n    }\n  };\n}; /////////////////////////USER///////////////////////////////////////////////////////////////////////////////////\n//////////////GET ALL RECEIVED ACCEPTED ORDER /////////////\n\nconst fetchAllRecievedAcceptedOrderUserRequest = () => {\n  return {\n    type: GET_RECEIVED_ORDER_ACCEPTED_REQUEST_USER,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchAllRecievedAcceptedOrderUserSuccess = receivedAcceptedOrderData => {\n  return {\n    type: GET_RECEIVED_ORDER_ACCEPTED_SUCCESS_USER,\n    payload: {\n      receivedAcceptedOrderData\n    }\n  };\n};\n\nconst fetchAllRecievedAcceptedOrderUserFailure = errorRecievedAcceptedOrder => {\n  return {\n    type: GET_RECEIVED_ORDER_ACCEPTED_FAILED_USER,\n    payload: errorRecievedAcceptedOrder\n  };\n};\n\nexport const fetchAllRecievedAcceptedOrderUser = () => {\n  return async function (dispatch) {\n    dispatch(fetchAllRecievedAcceptedOrderUserRequest());\n\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: URL_User + '/getAllAcceptedOrder',\n        headers: {\n          \"Accept\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const result = res.data;\n      let payload = [];\n      result.data.map(res => {\n        if (res.orders_accepted.length > 0) {\n          res.orders_accepted.map(result2 => {\n            payload = [...payload, { ...result2,\n              service: res\n            }];\n          });\n        }\n      });\n      console.log('AACCEPTED PAYLAD', payload); // if(res.data.message===\"You must be logged in\"){  \n      //     dispatch(signOutUser())\n      // }\n      // else{\n      //     dispatch(fetchAllRecievedAcceptedOrderUserSuccess(payload));\n      // }\n    } catch (errorRecievedAcceptedOrder) {\n      dispatch(fetchAllRecievedAcceptedOrderUserFailure(errorRecievedAcceptedOrder.response.data));\n    }\n  };\n}; //////////////GET ALL RECEIVED  PENDING ORDER /////////////\n\nconst fetchAllRecievedPendingOrderUserRequest = () => {\n  return {\n    type: GET_RECEIVED_ORDER_PENDING_REQUEST_USER,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchAllRecievedPendingOrderUserSuccess = receivedPendingOrderData => {\n  return {\n    type: GET_RECEIVED_ORDER_PENDING_SUCCESS_USER,\n    payload: {\n      receivedPendingOrderData\n    }\n  };\n};\n\nconst fetchAllRecievedPendingOrderUserFailure = errorRecievedPendingOrder => {\n  return {\n    type: GET_RECEIVED_ORDER_PENDING_FAILED_USER,\n    payload: errorRecievedPendingOrder\n  };\n};\n\nexport const fetchAllRecievedPendingOrderUser = () => {\n  return async function (dispatch) {\n    dispatch(fetchAllRecievedPendingOrderUserRequest());\n\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: URL_User + '/getAllPendingOrder',\n        headers: {\n          \"Accept\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const result = res.data;\n      let payload = [];\n      result.data.map(res => {\n        if (res.orders_pending.length > 0) {\n          res.orders_pending.map(result2 => {\n            payload = [...payload, { ...result2,\n              service: res\n            }];\n          });\n        }\n      });\n\n      if (res.data.message === \"You must be logged in\") {\n        dispatch(signOutUser());\n      } else {\n        dispatch(fetchAllRecievedPendingOrderUserSuccess(payload));\n      }\n    } catch (errorRecievedPendingOrder) {\n      dispatch(fetchAllRecievedPendingOrderUserFailure(errorRecievedPendingOrder.response.data));\n    }\n  };\n}; ///////////////GET ALL MY REJECTED ORDER /////////\n\nconst fetchAllMyRejectedOrderUserRequest = () => {\n  return {\n    type: GET_MY_ORDER_REJECTED_REQUEST_USER,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchAllMyRejectedOrderUserSucces = myRejectedOrderData => {\n  return {\n    type: GET_MY_ORDER_REJECTED_SUCCESS_USER,\n    payload: {\n      myRejectedOrderData\n    }\n  };\n};\n\nconst fetchAllMyRejectedOrderUserFailure = errorMyRejectedOrder => {\n  return {\n    type: GET_MY_ORDER_REJECTED_FAILED_USER,\n    payload: errorMyRejectedOrder\n  };\n};\n\nexport const fetchAllMyRejectedOrderUser = () => {\n  return async function (dispatch) {\n    dispatch(fetchAllMyRejectedOrderUserRequest());\n\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: URL_User + '/myOrdersRejected',\n        headers: {\n          \"Accept\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const result = res.data;\n\n      if (res.data.message === \"You must be logged in\") {\n        dispatch(signOutUser());\n      } else {\n        dispatch(fetchAllMyRejectedOrderUserSucces(result));\n      }\n    } catch (errorMyRejectedOrder) {\n      dispatch(fetchAllMyRejectedOrderUserFailure(errorMyRejectedOrder.response.data));\n    }\n  };\n}; ///////////////GET ALL MY ACCEPTED ORDER ////////////////////\n\nconst fetchAllMyAcceptedOrderUserRequest = () => {\n  return {\n    type: GET_MY_ORDER_ACCEPTED_REQUEST_USER,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchAllMyAcceptedOrderUserSucces = myAcceptedOrderData => {\n  return {\n    type: GET_MY_ORDER_ACCEPTED_SUCCESS_USER,\n    payload: {\n      myAcceptedOrderData\n    }\n  };\n};\n\nconst fetchAllMyAcceptedOrderUserFailure = errorMyAcceptedOrder => {\n  return {\n    type: GET_MY_ORDER_ACCEPTED_FAILED_USER,\n    payload: errorMyAcceptedOrder\n  };\n};\n\nexport const fetchAllMyAcceptedOrderUser = () => {\n  return async function (dispatch) {\n    dispatch(fetchAllMyAcceptedOrderUserRequest());\n\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: URL_User + '/myOrdersAccepted',\n        headers: {\n          \"Accept\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const result = res.data;\n\n      if (res.data.message === \"You must be logged in\") {\n        dispatch(signOutUser());\n      } else {\n        dispatch(fetchAllMyAcceptedOrderUserSucces(result));\n      }\n    } catch (errorMyAcceptedOrder) {\n      dispatch(fetchAllMyAcceptedOrderUserFailure(errorMyAcceptedOrder.response.data));\n    }\n  };\n}; ///////////////GET ALL MY PENDING ORDER /////////\n\nconst fetchAllMyPendingOrderUserRequest = () => {\n  return {\n    type: GET_MY_ORDER_PENDING_REQUEST_USER,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchAllMyPendingOrderUserSucces = myPendingOrderData => {\n  return {\n    type: GET_MY_ORDER_PENDING_SUCCESS_USER,\n    payload: {\n      myPendingOrderData\n    }\n  };\n};\n\nconst fetchAllMyPendingOrderUserFailure = errorMyPendingOrder => {\n  return {\n    type: GET_MY_ORDER_PENDING_FAILED_USER,\n    payload: errorMyPendingOrder\n  };\n};\n\nexport const fetchAllMyPendingOrderUser = () => {\n  return async function (dispatch) {\n    dispatch(fetchAllMyPendingOrderUserRequest());\n\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: URL_User + '/myOrdersPending',\n        headers: {\n          \"Accept\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const result = res.data;\n\n      if (res.data.message === \"You must be logged in\") {\n        dispatch(signOutUser());\n      } else {\n        dispatch(fetchAllMyPendingOrderUserSucces(result));\n      }\n    } catch (errorMyPendingOrder) {\n      dispatch(fetchAllMyPendingOrderUserFailure(errorMyPendingOrder.response.data));\n    }\n  };\n}; ////////////POST ORDER /////////\n\nconst postOrderUserRequest = () => {\n  return {\n    type: POST_ORDER_REQUEST_USER\n  };\n};\n\nconst postOrderUserSuccess = postOrderData => {\n  console.log('postOrderData', postOrderData);\n  return {\n    type: POST_ORDER_SUCCESS_USER,\n    payload: {\n      postOrderData\n    }\n  };\n};\n\nconst postOrderUserFailure = postOrderError => {\n  return {\n    type: POST_ORDER_FAILED_USER,\n    payload: postOrderError\n  };\n};\n\nexport const postOrder = OrderData => {\n  return async function (dispatch) {\n    dispatch(postOrderUserRequest());\n\n    try {\n      const response = await axios.post(URL_User + `/createOrder`, OrderData, {\n        headers: {\n          \"Accept\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const datas = response.data;\n      console.log('response', response.data);\n\n      if (response && response.data && response.data.message && response.data.message === \"You must be logged in\") {\n        dispatch(signOutUser());\n      } else {\n        dispatch(postOrderUserSuccess(datas));\n        toast.success('Your Order Has Been Sent Check your messages with your provider');\n      }\n    } catch (postOrderError) {\n      console.log('postOrderError', postOrderError.response.data);\n      dispatch(postOrderUserFailure(postOrderError.response.data));\n    }\n  };\n}; ///////CREATE SERVICE\n\nconst createServiceRequest = () => {\n  return {\n    type: POST_CREATE_SERVICE_REQUEST_USER\n  };\n};\n\nconst createServiceSuccess = postService => {\n  return {\n    type: POST_CREATE_SERVICE_SUCCESS_USER,\n    payload: {\n      postService\n    }\n  };\n};\n\nconst createServiceFailure = createServiceError => {\n  return {\n    type: POST_CREATE_SERVICE_FAILED_USER,\n    payload: createServiceError\n  };\n};\n\nexport const createService = postService => {\n  return async function (dispatch) {\n    dispatch(createServiceRequest());\n\n    try {\n      const response = await axios.post(URL_User + `/services`, postService, {\n        headers: {\n          \"Accept\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const data = response.data;\n      console.log(data);\n\n      if (response.data.message === \"You must be logged in\") {\n        dispatch(signOutUser());\n      } else {\n        dispatch(createServiceSuccess(data));\n        toast.success(data.message);\n      }\n    } catch (createServiceError) {\n      dispatch(createServiceFailure(createServiceError.response.data));\n    }\n  };\n}; //// FETCH SUBCATEGORY BY CATEGORY_ID //////////////\n\nexport const emptySubcategory = () => {\n  return {\n    type: EMPTY_SUBCATEGORY\n  };\n};\n\nconst fectchSubcategoryByCategoryIDRequest = () => {\n  console.log('test');\n  return {\n    type: GET_SUBCATEGORY_BY_CATEGORY_ID_REQUEST_USER\n  };\n};\n\nconst fectchSubcategoryByCategoryIDSuccess = fetchSubCategoryDataUser => {\n  return {\n    type: GET_SUBCATEGORY_BY_CATEGORY_ID_SUCCESS_USER,\n    payload: {\n      fetchSubCategoryDataUser\n    }\n  };\n};\n\nconst fectchSubcategoryByCategoryIDFailure = fetchSubCategoryDataUsererror => {\n  return {\n    type: GET_SUBCATEGORY_BY_CATEGORY_ID_FAILED_USER,\n    payload: fetchSubCategoryDataUsererror\n  };\n};\n\nexport const fetchSubcategoryByCategoryID = category_id => {\n  console.log(\"fetchSubcategoryByCategoryID\", category_id);\n  return async function (dispatch) {\n    dispatch(fectchSubcategoryByCategoryIDRequest());\n\n    try {\n      const response = await axios({\n        method: \"get\",\n        url: URL_User + `/getSubcategoryByCategoryId/${category_id}`,\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const data = response.data;\n\n      if (response.data.message === \"You must be logged in\") {\n        dispatch(signOutUser());\n      } else {\n        dispatch(fectchSubcategoryByCategoryIDSuccess(data));\n      }\n    } catch (fetchSubCategoryDataUsererror) {\n      dispatch(fectchSubcategoryByCategoryIDFailure(fetchSubCategoryDataUsererror));\n    }\n  };\n}; ////// FETCH ALL CATEGORY //////\n\nconst fetchAllCategoryRequestUser = () => {\n  return {\n    type: GET_ALL_CATEGORY_REQUEST_USER,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchAllCategorySuccessUser = categoryUserDataUser => {\n  return {\n    type: GET_ALL_CATEGORY_SUCCESS_USER,\n    payload: {\n      categoryUserDataUser\n    }\n  };\n};\n\nconst fetchAllCategoryFaillureUser = errorCategoryUser => {\n  return {\n    type: GET_ALL_CATEGORY_FAILED_USER,\n    payload: errorCategoryUser\n  };\n};\n\nexport const fetchAllCategoryUser = payload => {\n  return async function (dispatch) {\n    dispatch(fetchAllCategoryRequestUser());\n\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: URL_User + '/getAllCategory',\n        data: payload,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n\n      if (res.data.message === \"You must be logged in\") {\n        dispatch(signOutUser());\n      } else {\n        const result = res.data.category;\n        dispatch(fetchAllCategorySuccessUser(result));\n      }\n    } catch (errorCategoryUser) {\n      dispatch(fetchAllCategoryFaillureUser(errorCategoryUser.response.data));\n    }\n  };\n}; ////// FETCH ALL ACCEPTED CATEGORY //////\n\nconst fetchAllAcceptedCategoryRequest = () => {\n  return {\n    type: GET_ALL_CATEGORY_ACCEPTED_REQUEST_USER,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchAllAcceptedCategorySuccess = acceptedCategoryUserDataUser => {\n  return {\n    type: GET_ALL_CATEGORY_ACCEPTED_SUCCESS_USER,\n    payload: {\n      acceptedCategoryUserDataUser\n    }\n  };\n};\n\nconst fetchAllAcceptedCategoryFaillure = errorAcceptedCategoryUser => {\n  return {\n    type: GET_ALL_CATEGORY_ACCEPTED_FAILED_USER,\n    payload: errorAcceptedCategoryUser\n  };\n};\n\nexport const fetchAcceptedCategoryUser = payload => {\n  return async function (dispatch) {\n    dispatch(fetchAllAcceptedCategoryRequest());\n\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: URL_User + '/getAllAcceptedCategory',\n        data: payload,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n\n      if (res.data.message === \"You must be logged in\") {\n        dispatch(signOutUser());\n      } else {\n        const result = res.data.data;\n        dispatch(fetchAllAcceptedCategorySuccess(result));\n      }\n    } catch (errorAcceptedCategoryUser) {\n      dispatch(fetchAllAcceptedCategoryFaillure(errorAcceptedCategoryUser.response.data));\n    }\n  };\n}; /////////////////FETCH ALL ROOMS////////////\n\nconst fetchAllRoomsRequestUser = () => {\n  return {\n    type: GET_ROOMS_REQUEST_USER,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchAllRoomsSuccessUser = roomsUserData => {\n  return {\n    type: GET_ROOMS_SUCCESS_USER,\n    payload: {\n      roomsUserData\n    }\n  };\n};\n\nconst fetchAllRoomsFaillureUser = errorRooms => {\n  return {\n    type: GET_ROOMS_FAILED_USER,\n    payload: errorRooms\n  };\n};\n\nexport const fetchAllRoomsUser = payload => {\n  return async function (dispatch) {\n    dispatch(fetchAllRoomsRequestUser());\n\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: URL_User + '/getAllRooms',\n        data: payload,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n\n      if (res.data.message === \"You must be logged in\") {\n        dispatch(signOutUser());\n      } else {\n        const result = res.data;\n        dispatch(fetchAllRoomsSuccessUser(result));\n      }\n    } catch (errorRooms) {\n      dispatch(fetchAllRoomsFaillureUser(errorRooms.response.data));\n    }\n  };\n}; //// /////////////CONTACT  SELLER //////////////\n\nconst contactSellerRequest = () => {\n  return {\n    type: CONTACT_SELLER_REQUEST_USER\n  };\n};\n\nconst contactSellerSuccess = contactData => {\n  return {\n    type: CONTACT_SELLER_SUCCESS_USER,\n    payload: {\n      contactData\n    }\n  };\n};\n\nconst contactSellerFailure = contactError => {\n  return {\n    type: CONTACT_SELLER_FAILED_USER,\n    payload: contactError\n  };\n};\n\nexport const contactSeller = contactData => {\n  return async function (dispatch) {\n    dispatch(contactSellerRequest());\n\n    try {\n      const response = await axios.post(URL_User + `/contactSeller`, contactData, {\n        headers: {\n          \"Accept\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const data = response.data;\n\n      if (response.data.message === \"You must be logged in\") {\n        dispatch(signOutUser());\n      } else {\n        dispatch(contactSellerSuccess(data));\n        toast.success('Message Sent');\n      }\n    } catch (contactError) {\n      dispatch(contactSellerFailure(contactError.response.data));\n    }\n  };\n}; // SIGN UP USER\n\nconst signUpRequestUser = () => {\n  return {\n    type: SIGN_UP_USER_REQUEST\n  };\n};\n\nconst signUpSuccessUser = user => {\n  return {\n    type: SIGN_UP_USER_SUCCESS,\n    payload: {\n      user\n    }\n  };\n};\n\nconst signUpFailureUser = error => {\n  return {\n    type: SIGN_UP_USER_FAILURE,\n    payload: error.errors\n  };\n};\n\nexport const signUpUser = (user, history) => {\n  return async function (dispatch) {\n    dispatch(signUpRequestUser());\n\n    try {\n      const res = await axios({\n        method: \"post\",\n        url: URL_User + '/register',\n        data: user\n      });\n      const {\n        data\n      } = res.data;\n\n      if (res.data.success === false && res.status === 200 && res.data.errors) {\n        dispatch(signUpSuccessUser(res.data.erros));\n        toast.success('Succefully Registered');\n      } else {\n        dispatch(signUpFailureUser(data));\n      } //    console.log(res);\n      //     dispatch(signUpSuccessUser(data));\n      // history.push('/');\n\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        dispatch(signUpFailureUser(error.response.data));\n      } else {\n        dispatch(signUpFailureUser(error));\n      }\n    }\n  };\n}; //Sign in  USER\n\nconst signInRequestUser = () => {\n  return {\n    type: SIGN_IN_USER_REQUEST\n  };\n};\n\nconst signInSuccessUser = payload => {\n  return {\n    type: SIGN_IN_USER_SUCCESS,\n    payload\n  };\n};\n\nconst signInFailureUser = error => {\n  return {\n    type: SIGN_IN_USER_FAILURE,\n    payload: error\n  };\n};\n\nexport const signinUser = (payload, history) => {\n  return async function (dispatch) {\n    dispatch(signInRequestUser);\n\n    try {\n      const res = await axios({\n        method: \"POST\",\n        url: URL_User + \"/login\",\n        data: payload,\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        }\n      });\n      const {\n        access_token,\n        id,\n        user_name: {\n          name\n        }\n      } = res.data;\n      localStorage.setItem(\"USER-TOKEN\", access_token); // localStorage.setItem(\"USER-EMAIL\",email);\n\n      localStorage.setItem(\"USER-ID\", id);\n      localStorage.setItem(\"USER-NAME\", name);\n      dispatch(signInSuccessUser({\n        access_token,\n        id,\n        name\n      }));\n      toast.success('Succefully Logged in');\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        dispatch(signInFailureUser(error.response.data));\n      } else {\n        dispatch(signUpFailureUser(error));\n      }\n    }\n  };\n}; // sign out USER\n\nexport const signOutRequestUser = () => {\n  return {\n    type: SIGN_OUT_USER_REQUEST\n  };\n};\nexport const signOutSuccessUser = () => {\n  return {\n    type: SIGN_OUT_USER_SUCCESS\n  };\n};\nexport const signOutFailureUser = () => {\n  return {\n    type: SIGN_OUT_USER_FAILURE\n  };\n};\nexport const signOutUser = () => {\n  return async function (dispatch) {\n    dispatch(signOutRequestUser());\n\n    try {\n      const res = await axios({\n        method: \"POST\",\n        url: URL_User + \"/logout\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        }\n      });\n      localStorage.removeItem(\"USER-TOKEN\"); // localStorage.removeItem(\"USER-EMAIL\");\n\n      localStorage.removeItem(\"USER-ID\");\n      localStorage.removeItem(\"USER-NAME\");\n      toast.success('Logged out');\n    } catch (error) {\n      if (localStorage.getItem(\"USER-TOKEN\") !== null) {\n        dispatch(signOutFailureUser());\n      } else {\n        dispatch(signOutSuccessUser());\n      }\n    }\n  };\n}; ///////////////////////////////////////GUEST /////////////////////////////\n/////// FETCH ALL SUBCATEGORY CATEGORY AND SERVICES //////////////////////////////\n\nconst fetchAllDataGuestRequest = () => {\n  return {\n    type: GET_ALL_SUCATEGORY_CATEGORY_SERVICE_REQUEST_GUEST,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchAllDataGuestSuccess = guestData => {\n  return {\n    type: GET_ALL_SUCATEGORY_CATEGORY_SERVICE_SUCCESS_GUEST,\n    payload: {\n      guestData\n    }\n  };\n};\n\nconst fetchAllDataGuestFailure = errorDataGuest => {\n  return {\n    type: GET_ALL_SUCATEGORY_CATEGORY_SERVICE_FAILED_GUEST,\n    payload: errorDataGuest\n  };\n};\n\nexport const fetchAllDataGuest = payload => {\n  return async function (dispatch) {\n    dispatch(fetchAllDataGuestRequest());\n\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: URL_Guest + '/categories'\n      });\n      const result = res.data;\n      let payload = []; ///////////CAT AND SUB AND SERVICES/////////\n      // result.map((cat)=>{\n      //     if(cat.length!==0 && cat.subcategories_accepted.length>0 ){\n      //         console.log(cat)\n      //       payload.push(cat);\n      //     }\n      // })\n      ///////////CAT AND SUB AND SERVICES/////////\n      //////////HOLY CODE /////////////////////////////HOLY CODE /////////////////////////////HOLY CODE /////////////////////////////HOLY CODE ///////////////////\n      //  result.map((res)=>{\n      //     if(res.subcategories_accepted.length>0){\n      //           res.subcategories_accepted.map((result)=>  {\n      //              if(result.services_accepted.length>0){\n      //                       payload=[...payload,  \n      //                         ...result.services_accepted,\n      //                     ];\n      //           }\n      //     });\n      // }});\n      //////////HOLY CODE /////////////////////////////HOLY CODE /////////////////////////////HOLY CODE ///////////////////\n      // result.map((res)=>{\n      //     if(res.subcategories_accepted.length>0){\n      //           res.subcategories_accepted.map((result)=>  {\n      //              if(result.services_accepted.length>0){\n      //                       payload=[...payload,  ...result.services_accepted];\n      //           }\n      //     });\n      // }});\n      ///////////////// SERVICES ONLY ///////\n      /////////you get sub and services//////////////\n\n      result.map(res => {\n        if (res.subcategories_accepted.length > 0) {\n          res.subcategories_accepted.map(result => {\n            if (result.services_accepted.length > 0) {\n              result.services_accepted.map(value => {\n                payload = [...payload, { ...value,\n                  subcategory: result,\n                  category: res\n                }];\n              });\n            }\n          });\n        }\n      }); /////////you get sub and services//////////////\n\n      console.log('payload', payload);\n      dispatch({\n        type: ACCEPTED_SERVICES,\n        payload\n      });\n      dispatch(fetchAllDataGuestSuccess(result)); // dispatch(fetchAllAcceptedServicesFailure(\"\")); \n    } catch (errorDataGuest) {\n      dispatch(fetchAllDataGuestFailure(errorDataGuest.response.data));\n    }\n  };\n}; /////////////////FETCH ILLUSTRATOR GUEST ////////////////\n\nconst fetchIlllustratorGuestRequest = () => {\n  return {\n    type: GET_ALL_SUB_ILLUSTRATOR_SERVICE_REQUEST_GUEST,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchIlllustratorGuestSuccess = guestIllustratorData => {\n  return {\n    type: GET_ALL_SUB_ILLUSTRATOR_SERVICE_SUCCESS_GUEST,\n    payload: {\n      guestIllustratorData\n    }\n  };\n};\n\nconst fetchIlllustratorGuestFailure = errorIllustratorDataGuest => {\n  return {\n    type: GET_ALL_SUB_ILLUSTRATOR_SERVICE_FAILED_GUEST,\n    payload: errorIllustratorDataGuest\n  };\n};\n\nexport const fetchIllustratorDataGuest = payload => {\n  return async function (dispatch) {\n    dispatch(fetchIlllustratorGuestRequest());\n\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: URL_Guest + '/paginateServiceSubcategory'\n      });\n      const result = res.data;\n      dispatch(fetchIlllustratorGuestSuccess(result));\n    } catch (errorDataGuest) {\n      dispatch(fetchIlllustratorGuestFailure(errorDataGuest.response.data));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/chrishar/Documents/CODI/Final project/Siverr/frontend/src/redux/action-creators.js"],"names":["axios","SIGN_IN_ADMIN_FAILURE","SIGN_IN_ADMIN_REQUEST","SIGN_IN_ADMIN_SUCCESS","SIGN_UP_ADMIN_FAILURE","SIGN_UP_ADMIN_REQUEST","SIGN_UP_ADMIN_SUCCESS","SIGN_OUT_ADMIN_FAILURE","SIGN_OUT_ADMIN_REQUEST","SIGN_OUT_ADMIN_SUCCESS","GET_ALL_SERVICES_PENDING_REQUEST_ADMIN","GET_ALL_SERVICES_PENDING_SUCCESS_ADMIN","GET_ALL_SERVICES_PENDING_FAILURE_ADMIN","GET_ALL_SERVICES_ACCEPTED_REQUEST_ADMIN","GET_ALL_SERVICES_ACCEPTED_SUCCESS_ADMIN","GET_ALL_SERVICES_ACCEPTED_FAILURE_ADMIN","GET_ALL_SERVICES_REJECTED_REQUEST_ADMIN","GET_ALL_SERVICES_REJECTED_SUCCESS_ADMIN","GET_ALL_SERVICES_REJECTED_FAILURE_ADMIN","REJECT_SERVICE_PENDING_REQUEST_ADMIN","REJECT_SERVICE_PENDING_SUCCESS_ADMIN","REJECT_SERVICE_PENDING_FAILED_ADMIN","ACCCEPT_SERVICE_REQUEST_ADMIN","ACCCEPT_SERVICE_SUCCESS_ADMIN","ACCCEPT_SERVICE_FAILED_ADMIN","SIGN_IN_USER_FAILURE","SIGN_IN_USER_REQUEST","SIGN_IN_USER_SUCCESS","SIGN_UP_USER_FAILURE","SIGN_UP_USER_REQUEST","SIGN_UP_USER_SUCCESS","SIGN_OUT_USER_FAILURE","SIGN_OUT_USER_REQUEST","SIGN_OUT_USER_SUCCESS","ACCEPTED","REJECTED","PENDING","GET_ALL_CATEGORY_ACCEPTED_REQUEST_USER","GET_ALL_CATEGORY_ACCEPTED_SUCCESS_USER","GET_ALL_CATEGORY_ACCEPTED_FAILED_USER","GET_SUBCATEGORY_BY_CATEGORY_ID_REQUEST_USER","GET_SUBCATEGORY_BY_CATEGORY_ID_SUCCESS_USER","GET_SUBCATEGORY_BY_CATEGORY_ID_FAILED_USER","EMPTY_SUBCATEGORY","POST_CREATE_SERVICE_REQUEST_USER","POST_CREATE_SERVICE_SUCCESS_USER","POST_CREATE_SERVICE_FAILED_USER","GET_ALL_CATEGORY_REQUEST_USER","GET_ALL_CATEGORY_SUCCESS_USER","GET_ALL_CATEGORY_FAILED_USER","GET_ROOMS_REQUEST_USER","GET_ROOMS_SUCCESS_USER","GET_ROOMS_FAILED_USER","CONTACT_SELLER_REQUEST_USER","CONTACT_SELLER_SUCCESS_USER","CONTACT_SELLER_FAILED_USER","POST_ORDER_REQUEST_USER","POST_ORDER_SUCCESS_USER","POST_ORDER_FAILED_USER","GET_MY_ORDER_PENDING_REQUEST_USER","GET_MY_ORDER_PENDING_SUCCESS_USER","GET_MY_ORDER_PENDING_FAILED_USER","GET_MY_ORDER_ACCEPTED_REQUEST_USER","GET_MY_ORDER_ACCEPTED_SUCCESS_USER","GET_MY_ORDER_ACCEPTED_FAILED_USER","GET_MY_ORDER_REJECTED_REQUEST_USER","GET_MY_ORDER_REJECTED_SUCCESS_USER","GET_MY_ORDER_REJECTED_FAILED_USER","GET_RECEIVED_ORDER_PENDING_REQUEST_USER","GET_RECEIVED_ORDER_PENDING_SUCCESS_USER","GET_RECEIVED_ORDER_PENDING_FAILED_USER","GET_RECEIVED_ORDER_ACCEPTED_REQUEST_USER","GET_RECEIVED_ORDER_ACCEPTED_SUCCESS_USER","GET_RECEIVED_ORDER_ACCEPTED_FAILED_USER","GET_ALL_SUCATEGORY_CATEGORY_SERVICE_REQUEST_GUEST","GET_ALL_SUCATEGORY_CATEGORY_SERVICE_SUCCESS_GUEST","GET_ALL_SUCATEGORY_CATEGORY_SERVICE_FAILED_GUEST","ACCEPTED_SERVICES","GET_ALL_SUB_ILLUSTRATOR_SERVICE_REQUEST_GUEST","GET_ALL_SUB_ILLUSTRATOR_SERVICE_SUCCESS_GUEST","GET_ALL_SUB_ILLUSTRATOR_SERVICE_FAILED_GUEST","toast","URL_Admin","URL_Guest","URL_User","rejectServiceRequestAdmin","type","rejectServiceSuccessAdmin","rejectServiceAdminData","payload","rejectServiceFailureAdmin","rejectServiceDataError","rejectServiceAdmin","reason_for_rejection","service_id","dispatch","console","log","response","method","url","headers","Authorization","localStorage","getItem","data","message","signOutAdmin","accepteServiceRequestAdmin","accepteServiceSuccessAdmin","acceptedServiceAdminData","accepteServiceFailureAdmin","acceptedServiceDataError","acceptServiceAdmin","success","pendingScreen","rejectedScreen","acceptedScreen","fetchAllRejectedServicesRequest","loading","fetchAllRejectedServicesSuccess","rejectedServiceData","fetchAllRejectedServicesFailure","errorRejected","fetchRejectedServices","res","result","fetchAllAcceptedServicesRequest","fetchAllAcceptedServicesSuccess","acceptedServiceData","fetchAllAcceptedServicesFailure","errorAccepted","fetchAcceptedServices","fetchAllPendingServicesRequest","fetchAllPendingServicesSuccess","pendingServiceData","fetchAllPendingServicesFailure","errorPending","fetchPendingServices","signUpRequestAdmin","signUpSuccessAdmin","user","signUpFailureAdmin","error","signUpAdmin","history","push","signInRequestAdmin","signInSuccessAdmin","signInFailureAdmin","signinAdmin","access_token","name","setItem","status","signOutRequestAdmin","signOutSuccessAdmin","signOutFailureAdmin","removeItem","fetchAllRecievedAcceptedOrderUserRequest","fetchAllRecievedAcceptedOrderUserSuccess","receivedAcceptedOrderData","fetchAllRecievedAcceptedOrderUserFailure","errorRecievedAcceptedOrder","fetchAllRecievedAcceptedOrderUser","map","orders_accepted","length","result2","service","fetchAllRecievedPendingOrderUserRequest","fetchAllRecievedPendingOrderUserSuccess","receivedPendingOrderData","fetchAllRecievedPendingOrderUserFailure","errorRecievedPendingOrder","fetchAllRecievedPendingOrderUser","orders_pending","signOutUser","fetchAllMyRejectedOrderUserRequest","fetchAllMyRejectedOrderUserSucces","myRejectedOrderData","fetchAllMyRejectedOrderUserFailure","errorMyRejectedOrder","fetchAllMyRejectedOrderUser","fetchAllMyAcceptedOrderUserRequest","fetchAllMyAcceptedOrderUserSucces","myAcceptedOrderData","fetchAllMyAcceptedOrderUserFailure","errorMyAcceptedOrder","fetchAllMyAcceptedOrderUser","fetchAllMyPendingOrderUserRequest","fetchAllMyPendingOrderUserSucces","myPendingOrderData","fetchAllMyPendingOrderUserFailure","errorMyPendingOrder","fetchAllMyPendingOrderUser","postOrderUserRequest","postOrderUserSuccess","postOrderData","postOrderUserFailure","postOrderError","postOrder","OrderData","post","datas","createServiceRequest","createServiceSuccess","postService","createServiceFailure","createServiceError","createService","emptySubcategory","fectchSubcategoryByCategoryIDRequest","fectchSubcategoryByCategoryIDSuccess","fetchSubCategoryDataUser","fectchSubcategoryByCategoryIDFailure","fetchSubCategoryDataUsererror","fetchSubcategoryByCategoryID","category_id","fetchAllCategoryRequestUser","fetchAllCategorySuccessUser","categoryUserDataUser","fetchAllCategoryFaillureUser","errorCategoryUser","fetchAllCategoryUser","category","fetchAllAcceptedCategoryRequest","fetchAllAcceptedCategorySuccess","acceptedCategoryUserDataUser","fetchAllAcceptedCategoryFaillure","errorAcceptedCategoryUser","fetchAcceptedCategoryUser","fetchAllRoomsRequestUser","fetchAllRoomsSuccessUser","roomsUserData","fetchAllRoomsFaillureUser","errorRooms","fetchAllRoomsUser","contactSellerRequest","contactSellerSuccess","contactData","contactSellerFailure","contactError","contactSeller","signUpRequestUser","signUpSuccessUser","signUpFailureUser","errors","signUpUser","erros","signInRequestUser","signInSuccessUser","signInFailureUser","signinUser","id","user_name","signOutRequestUser","signOutSuccessUser","signOutFailureUser","fetchAllDataGuestRequest","fetchAllDataGuestSuccess","guestData","fetchAllDataGuestFailure","errorDataGuest","fetchAllDataGuest","subcategories_accepted","services_accepted","value","subcategory","fetchIlllustratorGuestRequest","fetchIlllustratorGuestSuccess","guestIllustratorData","fetchIlllustratorGuestFailure","errorIllustratorDataGuest","fetchIllustratorDataGuest"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,qBADJ,EAEIC,qBAFJ,EAGIC,qBAHJ,EAIIC,qBAJJ,EAKIC,qBALJ,EAMIC,qBANJ,EAOIC,sBAPJ,EAQIC,sBARJ,EASIC,sBATJ,EAWIC,sCAXJ,EAYIC,sCAZJ,EAaIC,sCAbJ,EAcIC,uCAdJ,EAeIC,uCAfJ,EAgBIC,uCAhBJ,EAiBIC,uCAjBJ,EAkBIC,uCAlBJ,EAmBIC,uCAnBJ,EAqBIC,oCArBJ,EAsBIC,oCAtBJ,EAuBIC,mCAvBJ,EAyBIC,6BAzBJ,EA0BIC,6BA1BJ,EA2BIC,4BA3BJ,EA6BIC,oBA7BJ,EA8BIC,oBA9BJ,EA+BIC,oBA/BJ,EAgCIC,oBAhCJ,EAiCIC,oBAjCJ,EAkCIC,oBAlCJ,EAmCIC,qBAnCJ,EAoCIC,qBApCJ,EAqCIC,qBArCJ,EAuCIC,QAvCJ,EAwCIC,QAxCJ,EAyCIC,OAzCJ,EA2CIC,sCA3CJ,EA4CIC,sCA5CJ,EA6CIC,qCA7CJ,EA+CIC,2CA/CJ,EAgDIC,2CAhDJ,EAiDIC,0CAjDJ,EAkDIC,iBAlDJ,EAoDIC,gCApDJ,EAqDIC,gCArDJ,EAsDIC,+BAtDJ,EAwDIC,6BAxDJ,EAyDIC,6BAzDJ,EA0DIC,4BA1DJ,EA4DIC,sBA5DJ,EA6DIC,sBA7DJ,EA8DIC,qBA9DJ,EAgEIC,2BAhEJ,EAiEIC,2BAjEJ,EAkEIC,0BAlEJ,EAoEIC,uBApEJ,EAqEIC,uBArEJ,EAsEIC,sBAtEJ,EAwEIC,iCAxEJ,EAyEIC,iCAzEJ,EA0EIC,gCA1EJ,EA4EIC,kCA5EJ,EA6EIC,kCA7EJ,EA8EIC,iCA9EJ,EAgFIC,kCAhFJ,EAiFIC,kCAjFJ,EAkFIC,iCAlFJ,EAoFIC,uCApFJ,EAqFIC,uCArFJ,EAsFIC,sCAtFJ,EAwFIC,wCAxFJ,EAyFIC,wCAzFJ,EA0FIC,uCA1FJ,EA6FIC,iDA7FJ,EA8FIC,iDA9FJ,EA+FIC,gDA/FJ,EAgGIC,iBAhGJ,EAkGIC,6CAlGJ,EAmGIC,6CAnGJ,EAoGIC,4CApGJ,QAsGO,gBAtGP;AAwGA,SAAQC,KAAR,QAAoB,gBAApB;AAEA,SAASC,SAAT,EAAmBC,SAAnB,EAA6BC,QAA7B,QAA6C,mBAA7C,C,CAEA;AAEA;;AACA,MAAMC,yBAAyB,GAAG,MAAK;AAEnC,SAAM;AACFC,IAAAA,IAAI,EAAEnE;AADJ,GAAN;AAGH,CALD;;AAOA,MAAMoE,yBAAyB,GAAIC,sBAAD,IAA2B;AACzD,SAAM;AACFF,IAAAA,IAAI,EAAElE,oCADJ;AAEFqE,IAAAA,OAAO,EAAE;AACLD,MAAAA;AADK;AAFP,GAAN;AAMH,CAPD;;AASA,MAAME,yBAAyB,GAAIC,sBAAD,IAA2B;AAEzD,SAAO;AACHL,IAAAA,IAAI,EAAEjE,mCADH;AAEHoE,IAAAA,OAAO,EAACE;AAFL,GAAP;AAIH,CAND;;AAQA,OAAO,MAAMC,kBAAkB,GAAI,CAACC,oBAAD,EAAsBC,UAAtB,KAAoC;AAEnE,SAAO,gBAAgBC,QAAhB,EAA0B;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCJ,oBAAnC;AACQE,IAAAA,QAAQ,CAACV,yBAAyB,EAA1B,CAAR;;AACJ,QAAG;AACA,YAAMa,QAAQ,GAAG,MAAMlG,KAAK,CAAC;AACxBmG,QAAAA,MAAM,EAAC,MADiB;AAExBC,QAAAA,GAAG,EAAElB,SAAS,GAAE,0BAAyBY,UAAW,EAF5B;AAGxBO,QAAAA,OAAO,EAAC;AACJ,0BAAe,kBADX;AAEJ,oBAAS,kBAFL;AAGJC,UAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AAHxD,SAHgB;AAQxBC,QAAAA,IAAI,EAACZ;AARmB,OAAD,CAA5B;AAWC,YAAMY,IAAI,GAAGP,QAAQ,CAACO,IAAtB;;AACA,UAAGP,QAAQ,CAACO,IAAT,CAAcC,OAAd,KAAwB,gCAA3B,EAA4D;AACxDX,QAAAA,QAAQ,CAACY,YAAY,EAAb,CAAR;AACH,OAFD,MAGI;AACA;AACJZ,QAAAA,QAAQ,CAACR,yBAAyB,CAACkB,IAAD,CAA1B,CAAR;AAEC;AAEJ,KAtBD,CAsBC,OAAMd,sBAAN,EAA6B;AAE1BI,MAAAA,QAAQ,CAACL,yBAAyB,CAACC,sBAAD,CAA1B,CAAR;AACH;AAEA,GA9BD;AA+BH,CAjCM,C,CAqCP;;AACA,MAAMiB,0BAA0B,GAAG,MAAK;AAEpC,SAAM;AACFtB,IAAAA,IAAI,EAAEhE;AADJ,GAAN;AAGH,CALD;;AAOA,MAAMuF,0BAA0B,GAAIC,wBAAD,IAA6B;AAC5D,SAAM;AACFxB,IAAAA,IAAI,EAAE/D,6BADJ;AAEFkE,IAAAA,OAAO,EAAE;AACLqB,MAAAA;AADK;AAFP,GAAN;AAMH,CAPD;;AASA,MAAMC,0BAA0B,GAAIC,wBAAD,IAA6B;AAE5D,SAAO;AACH1B,IAAAA,IAAI,EAAE9D,4BADH;AAEHiE,IAAAA,OAAO,EAACuB;AAFL,GAAP;AAIH,CAND;;AAQA,OAAO,MAAMC,kBAAkB,GAAKnB,UAAD,IAAe;AAC/CE,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACC,SAAO,gBAAgBF,QAAhB,EAA0B;AAE7BA,IAAAA,QAAQ,CAACa,0BAA0B,EAA3B,CAAR;;AACJ,QAAG;AACA,YAAMV,QAAQ,GAAG,MAAMlG,KAAK,CAAC;AACxBmG,QAAAA,MAAM,EAAC,KADiB;AAExBC,QAAAA,GAAG,EAAElB,SAAS,GAAE,kBAAiBY,UAAW,EAFpB;AAGxBO,QAAAA,OAAO,EAAC;AACJ,0BAAe,kBADX;AAEJ,oBAAS,kBAFL;AAGJC,UAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AAHxD;AAHgB,OAAD,CAA5B;AAUC,YAAMC,IAAI,GAAGP,QAAQ,CAACO,IAAtB;;AACA,UAAGP,QAAQ,CAACO,IAAT,CAAcC,OAAd,KAAwB,gCAA3B,EAA4D;AACxDX,QAAAA,QAAQ,CAACY,YAAY,EAAb,CAAR;AACH,OAFD,MAGI;AACA1B,QAAAA,KAAK,CAACiC,OAAN,CAAcT,IAAI,CAACC,OAAnB;AACJX,QAAAA,QAAQ,CAACc,0BAA0B,CAACJ,IAAD,CAA3B,CAAR;AAEC;AAEJ,KArBD,CAqBC,OAAMO,wBAAN,EAA+B;AAE5BjB,MAAAA,QAAQ,CAACgB,0BAA0B,CAACC,wBAAD,CAA3B,CAAR;AACH;AAEA,GA7BD;AA8BH,CAhCM,C,CAkCP;;AAEA,OAAO,MAAMG,aAAa,GAAG,MAC7B;AACI,SAAQ;AACJ7B,IAAAA,IAAI,EAAClD;AADD,GAAR;AAGH,CALM;AAMP,OAAO,MAAMgF,cAAc,GAAG,MAC9B;AACI,SAAQ;AACJ9B,IAAAA,IAAI,EAACnD;AADD,GAAR;AAGH,CALM;AAOP,OAAO,MAAMkF,cAAc,GAAG,MAC9B;AACI,SAAQ;AACJ/B,IAAAA,IAAI,EAACpD;AADD,GAAR;AAGH,CALM,C,CAOP;;AAEA,MAAMoF,+BAA+B,GAAG,MAAK;AACzC,SAAM;AACFhC,IAAAA,IAAI,EAAEtE,uCADJ;AAEFyE,IAAAA,OAAO,EAAE;AACL8B,MAAAA,OAAO,EAAE;AADJ;AAFP,GAAN;AAMH,CAPD;;AASA,MAAMC,+BAA+B,GAAIC,mBAAD,IAAwB;AAE5D,SAAM;AACFnC,IAAAA,IAAI,EAAErE,uCADJ;AAEFwE,IAAAA,OAAO,EAAE;AACLgC,MAAAA;AADK;AAFP,GAAN;AAMH,CARD;;AAUA,MAAMC,+BAA+B,GAAIC,aAAD,IAAkB;AACtD,SAAO;AACHrC,IAAAA,IAAI,EAAEpE,uCADH;AAEHuE,IAAAA,OAAO,EAACkC;AAFL,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMC,qBAAqB,GAAInC,OAAD,IAAY;AAE7C,SAAO,gBAAgBM,QAAhB,EAA0B;AAC7BA,IAAAA,QAAQ,CAACuB,+BAA+B,EAAhC,CAAR;;AACA,QAAG;AACC,YAAMO,GAAG,GAAG,MAAM7H,KAAK,CAAC;AAChBmG,QAAAA,MAAM,EAAC,KADS;AAEhBC,QAAAA,GAAG,EAAElB,SAAS,GAAC,wBAFC;AAGhBuB,QAAAA,IAAI,EAAEhB,OAHU;AAIhBY,QAAAA,OAAO,EAAC;AACPC,UAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AADrD;AAJQ,OAAD,CAAvB;;AAQG,UAAGqB,GAAG,CAACpB,IAAJ,CAASC,OAAT,KAAmB,gCAAtB,EAAuD;AACnDX,QAAAA,QAAQ,CAACY,YAAY,EAAb,CAAR;AACH,OAFD,MAGI;AACH,cAAMmB,MAAM,GAAGD,GAAG,CAACpB,IAAJ,CAASA,IAAxB;AACAV,QAAAA,QAAQ,CAACyB,+BAA+B,CAACM,MAAD,CAAhC,CAAR;AACA;AAEP,KAjBD,CAiBC,OAAMH,aAAN,EAAoB;AAEb5B,MAAAA,QAAQ,CAAC2B,+BAA+B,CAACC,aAAa,CAACzB,QAAd,CAAuBO,IAAxB,CAAhC,CAAR;AAEP;AACJ,GAxBD;AAyBH,CA3BM,C,CA8BP;;AACA,MAAMsB,+BAA+B,GAAG,MAAK;AACzC,SAAM;AACFzC,IAAAA,IAAI,EAAEzE,uCADJ;AAEF4E,IAAAA,OAAO,EAAE;AACL8B,MAAAA,OAAO,EAAE;AADJ;AAFP,GAAN;AAMH,CAPD;;AASA,MAAMS,+BAA+B,GAAIC,mBAAD,IAAwB;AAE5D,SAAM;AACF3C,IAAAA,IAAI,EAAExE,uCADJ;AAEF2E,IAAAA,OAAO,EAAE;AACLwC,MAAAA;AADK;AAFP,GAAN;AAMH,CARD;;AAUA,MAAMC,+BAA+B,GAAIC,aAAD,IAAkB;AAEtD,SAAO;AACH7C,IAAAA,IAAI,EAAEvE,uCADH;AAEH0E,IAAAA,OAAO,EAAC0C;AAFL,GAAP;AAIH,CAND;;AAQA,OAAO,MAAMC,qBAAqB,GAAI3C,OAAD,IAAY;AAE7C,SAAO,gBAAgBM,QAAhB,EAA0B;AAC7BA,IAAAA,QAAQ,CAACgC,+BAA+B,EAAhC,CAAR;;AACA,QAAG;AACC,YAAMF,GAAG,GAAG,MAAM7H,KAAK,CAAC;AAChBmG,QAAAA,MAAM,EAAC,KADS;AAEhBC,QAAAA,GAAG,EAAElB,SAAS,GAAC,wBAFC;AAGhBuB,QAAAA,IAAI,EAAEhB,OAHU;AAIhBY,QAAAA,OAAO,EAAC;AACPC,UAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AADrD;AAJQ,OAAD,CAAvB;;AAQG,UAAGqB,GAAG,CAACpB,IAAJ,CAASC,OAAT,KAAmB,gCAAtB,EAAuD;AACnDX,QAAAA,QAAQ,CAACY,YAAY,EAAb,CAAR;AACH,OAFD,MAGI;AACH,cAAMmB,MAAM,GAAGD,GAAG,CAACpB,IAAJ,CAASA,IAAxB;AACAV,QAAAA,QAAQ,CAACiC,+BAA+B,CAACF,MAAD,CAAhC,CAAR;AACA;AAEP,KAjBD,CAiBC,OAAMK,aAAN,EAAoB;AAEbpC,MAAAA,QAAQ,CAACmC,+BAA+B,CAACC,aAAa,CAACjC,QAAd,CAAuBO,IAAxB,CAAhC,CAAR;AAEP;AACJ,GAxBD;AAyBH,CA3BM,C,CA8BP;;AAEA,MAAM4B,8BAA8B,GAAG,MAAK;AACxC,SAAM;AACF/C,IAAAA,IAAI,EAAE5E,sCADJ;AAEF+E,IAAAA,OAAO,EAAE;AACL8B,MAAAA,OAAO,EAAE;AADJ;AAFP,GAAN;AAMH,CAPD;;AASA,MAAMe,8BAA8B,GAAIC,kBAAD,IAAuB;AAE1D,SAAM;AACFjD,IAAAA,IAAI,EAAE3E,sCADJ;AAEF8E,IAAAA,OAAO,EAAE;AACL8C,MAAAA;AADK;AAFP,GAAN;AAMH,CARD;;AAUA,MAAMC,8BAA8B,GAAIC,YAAD,IAAiB;AACpD,SAAO;AACHnD,IAAAA,IAAI,EAAE1E,sCADH;AAEH6E,IAAAA,OAAO,EAACgD;AAFL,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMC,oBAAoB,GAAIjD,OAAD,IAAY;AAE5C,SAAO,gBAAgBM,QAAhB,EAA0B;AAC7BA,IAAAA,QAAQ,CAACsC,8BAA8B,EAA/B,CAAR;;AACA,QAAG;AACC,YAAMR,GAAG,GAAG,MAAM7H,KAAK,CAAC;AAChBmG,QAAAA,MAAM,EAAC,KADS;AAEhBC,QAAAA,GAAG,EAAElB,SAAS,GAAC,uBAFC;AAGhBuB,QAAAA,IAAI,EAAEhB,OAHU;AAIhBY,QAAAA,OAAO,EAAC;AACPC,UAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AADrD;AAJQ,OAAD,CAAvB;;AAQG,UAAGqB,GAAG,CAACpB,IAAJ,CAASC,OAAT,KAAmB,gCAAtB,EAAuD;AACnDX,QAAAA,QAAQ,CAACY,YAAY,EAAb,CAAR;AACH,OAFD,MAGI;AAEH,cAAMmB,MAAM,GAAGD,GAAG,CAACpB,IAAJ,CAASA,IAAxB;AACAV,QAAAA,QAAQ,CAACuC,8BAA8B,CAACR,MAAD,CAA/B,CAAR,CAHG,CAIH;AACA;AAEP,KAnBD,CAmBC,OAAMW,YAAN,EAAmB;AAEZ1C,MAAAA,QAAQ,CAACyC,8BAA8B,CAACC,YAAY,CAACvC,QAAb,CAAsBO,IAAvB,CAA/B,CAAR;AAEP;AACJ,GA1BD;AA2BH,CA7BM,C,CA+BP;;AAEA,MAAMkC,kBAAkB,GAAG,MAAK;AAC5B,SAAM;AACFrD,IAAAA,IAAI,EAAEjF;AADJ,GAAN;AAGH,CAJD;;AAMA,MAAMuI,kBAAkB,GAAIC,IAAD,IAAS;AAChC,SAAM;AACFvD,IAAAA,IAAI,EAAEhF,qBADJ;AAEFmF,IAAAA,OAAO,EAAE;AACLoD,MAAAA;AADK;AAFP,GAAN;AAMH,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,KAAD,IAAU;AACjC,SAAO;AACHzD,IAAAA,IAAI,EAAElF,qBADH;AAEHqF,IAAAA,OAAO,EAACsD;AAFL,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMC,WAAW,GAAG,CAACH,IAAD,EAAMI,OAAN,KAAiB;AAExC,SAAO,gBAAgBlD,QAAhB,EAA2B;AAC9BA,IAAAA,QAAQ,CAAC4C,kBAAkB,EAAnB,CAAR;;AACA,QAAG;AACC,YAAMd,GAAG,GAAG,MAAM7H,KAAK,CAAC;AACpBmG,QAAAA,MAAM,EAAC,MADa;AAEpBC,QAAAA,GAAG,EAAElB,SAAS,GAAC,WAFK;AAGpBuB,QAAAA,IAAI,EAAEoC;AAHc,OAAD,CAAvB;AAKI,YAAM;AAACpC,QAAAA;AAAD,UAASoB,GAAG,CAACpB,IAAnB;AAEAV,MAAAA,QAAQ,CAAC6C,kBAAkB,CAACnC,IAAD,CAAnB,CAAR;AACAwC,MAAAA,OAAO,CAACC,IAAR,CAAa,YAAb;AACP,KAVD,CAUC,OAAMH,KAAN,EAAY;AAENhD,MAAAA,QAAQ,CAAC+C,kBAAkB,CAACC,KAAD,CAAnB,CAAR;AAEN;AACJ,GAjBD;AAkBH,CApBM,C,CAsBP;;AAEA,MAAMI,kBAAkB,GAAG,MAAK;AAC5B,SAAO;AACH7D,IAAAA,IAAI,EAAEpF;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMkJ,kBAAkB,GAAI3D,OAAD,IAAY;AACnC,SAAO;AACHH,IAAAA,IAAI,EAAEnF,qBADH;AAEHsF,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,MAAM4D,kBAAkB,GAAIN,KAAD,IAAU;AAEjC,SAAO;AACHzD,IAAAA,IAAI,EAAErF,qBADH;AAEHwF,IAAAA,OAAO,EAAEsD;AAFN,GAAP;AAIH,CAND;;AAQA,OAAO,MAAMO,WAAW,GAAG,CAAC7D,OAAD,EAASwD,OAAT,KAAoB;AAE3C,SAAO,gBAAgBlD,QAAhB,EAA0B;AAE7BA,IAAAA,QAAQ,CAACoD,kBAAD,CAAR;;AACA,QAAG;AAEA,YAAMtB,GAAG,GAAE,MAAM7H,KAAK,CAAC;AAClBmG,QAAAA,MAAM,EAAC,MADW;AAElBC,QAAAA,GAAG,EAAElB,SAAS,GAAC,QAFG;AAGlBuB,QAAAA,IAAI,EAAChB,OAHa;AAIlBY,QAAAA,OAAO,EAAC;AACJ,0BAAe,kBADX;AAEJ,oBAAS;AAFL;AAJU,OAAD,CAAtB;AAUC,YAAM;AAACkD,QAAAA,YAAD;AAAcC,QAAAA;AAAd,UAAsB3B,GAAG,CAACpB,IAAhC;AAEAF,MAAAA,YAAY,CAACkD,OAAb,CAAqB,YAArB,EAAkCD,IAAlC;AACIjD,MAAAA,YAAY,CAACkD,OAAb,CAAqB,aAArB,EAAmCF,YAAnC;AACAxD,MAAAA,QAAQ,CAACqD,kBAAkB,CAAC;AAACG,QAAAA,YAAD;AAAcC,QAAAA;AAAd,OAAD,CAAnB,CAAR;AACP,KAjBD,CAiBC,OAAMT,KAAN,EAAY;AACT,UAAGA,KAAK,CAAC7C,QAAN,IAAkB6C,KAAK,CAAC7C,QAAN,CAAewD,MAAf,KAA0B,GAA/C,EAAmD;AAC/C3D,QAAAA,QAAQ,CAACsD,kBAAkB,CAACN,KAAK,CAAC7C,QAAN,CAAeO,IAAhB,CAAnB,CAAR;AAEJ,OAHA,MAIG;AACAV,QAAAA,QAAQ,CAAC+C,kBAAkB,CAACC,KAAD,CAAnB,CAAR;AACH;AAGH;AAEJ,GAhCD;AAiCH,CAnCM,C,CAqCP;;AAEA,OAAO,MAAMY,mBAAmB,GAAG,MAAK;AACpC,SAAO;AACHrE,IAAAA,IAAI,EAAE9E;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMoJ,mBAAmB,GAAG,MAAK;AACpC,SAAO;AACLtE,IAAAA,IAAI,EAAE7E;AADD,GAAP;AAGD,CAJI;AAMP,OAAO,MAAMoJ,mBAAmB,GAAG,MAAK;AACpC,SAAO;AACHvE,IAAAA,IAAI,EAAE/E;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMoG,YAAY,GAAIsC,OAAD,IAAY;AAEpC,SAAO,gBAAelD,QAAf,EAAwB;AAC3BA,IAAAA,QAAQ,CAAC4D,mBAAmB,EAApB,CAAR;;AACA,QAAG;AAGC,YAAM9B,GAAG,GAAE,MAAM7H,KAAK,CAAC;AAClBmG,QAAAA,MAAM,EAAC,MADW;AAElBC,QAAAA,GAAG,EAAElB,SAAS,GAAC,SAFG;AAGlBmB,QAAAA,OAAO,EAAC;AACJ,0BAAe,kBADX;AAEJ,oBAAS,kBAFL;AAGJ,2BAAiB,UAASE,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AAH1D;AAHU,OAAD,CAAtB;AASJD,MAAAA,YAAY,CAACuD,UAAb,CAAwB,aAAxB;AACAvD,MAAAA,YAAY,CAACuD,UAAb,CAAwB,YAAxB;AACFb,MAAAA,OAAO,CAACC,IAAR,CAAa,eAAb;AACEjE,MAAAA,KAAK,CAACiC,OAAN,CAAc,YAAd;AACK,KAhBL,CAiBI,OAAM6B,KAAN,EAAY;AAGR,UAAGxC,YAAY,CAACC,OAAb,CAAqB,aAArB,MAAuC,IAA1C,EAA+C;AAC3CT,QAAAA,QAAQ,CAAC8D,mBAAmB,EAApB,CAAR;AACH,OAFD,MAGI;AACA9D,QAAAA,QAAQ,CAAC6D,mBAAmB,EAApB,CAAR;AACH;AACJ;AAER,GA9BD;AA+BH,CAjCM,C,CAkCP;AAEA;;AAEA,MAAMG,wCAAwC,GAAG,MAAK;AAClD,SAAM;AACFzE,IAAAA,IAAI,EAAEf,wCADJ;AAEFkB,IAAAA,OAAO,EAAE;AACL8B,MAAAA,OAAO,EAAE;AADJ;AAFP,GAAN;AAMH,CAPD;;AASA,MAAMyC,wCAAwC,GAAIC,yBAAD,IAA8B;AAE3E,SAAM;AACF3E,IAAAA,IAAI,EAAEd,wCADJ;AAEFiB,IAAAA,OAAO,EAAE;AACLwE,MAAAA;AADK;AAFP,GAAN;AAMH,CARD;;AAUA,MAAMC,wCAAwC,GAAIC,0BAAD,IAA+B;AAC5E,SAAO;AACH7E,IAAAA,IAAI,EAAEb,uCADH;AAEHgB,IAAAA,OAAO,EAAC0E;AAFL,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMC,iCAAiC,GAAG,MAAK;AAElD,SAAO,gBAAgBrE,QAAhB,EAA0B;AAC7BA,IAAAA,QAAQ,CAACgE,wCAAwC,EAAzC,CAAR;;AACA,QAAG;AACC,YAAMlC,GAAG,GAAG,MAAM7H,KAAK,CAAC;AAChBmG,QAAAA,MAAM,EAAC,KADS;AAEhBC,QAAAA,GAAG,EAAEhB,QAAQ,GAAC,sBAFE;AAGhBiB,QAAAA,OAAO,EAAC;AACJ,oBAAS,kBADL;AAEJC,UAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmC;AAFvD;AAHQ,OAAD,CAAvB;AASI,YAAMsB,MAAM,GAAGD,GAAG,CAACpB,IAAnB;AACA,UAAIhB,OAAO,GAAC,EAAZ;AAGAqC,MAAAA,MAAM,CAACrB,IAAP,CAAY4D,GAAZ,CAAiBxC,GAAD,IAAO;AAEnB,YAAGA,GAAG,CAACyC,eAAJ,CAAoBC,MAApB,GAA2B,CAA9B,EAAgC;AAE5B1C,UAAAA,GAAG,CAACyC,eAAJ,CAAoBD,GAApB,CAAyBG,OAAD,IAAa;AACjC/E,YAAAA,OAAO,GAAC,CAAC,GAAGA,OAAJ,EAAY,EAAC,GAAG+E,OAAJ;AAChBC,cAAAA,OAAO,EAAC5C;AADQ,aAAZ,CAAR;AAIP,WALG;AAMP;AAAC,OAVF;AAWA7B,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BR,OAA/B,EAzBL,CA6BK;AACA;AACA;AACA;AAEA;AAEA;AAKP,KAzCD,CAyCC,OAAM0E,0BAAN,EAAiC;AAE1BpE,MAAAA,QAAQ,CAACmE,wCAAwC,CAACC,0BAA0B,CAACjE,QAA3B,CAAoCO,IAArC,CAAzC,CAAR;AAEP;AACJ,GAhDD;AAiDH,CAnDM,C,CAqDP;;AAEA,MAAMiE,uCAAuC,GAAG,MAAK;AACjD,SAAM;AACFpF,IAAAA,IAAI,EAAElB,uCADJ;AAEFqB,IAAAA,OAAO,EAAE;AACL8B,MAAAA,OAAO,EAAE;AADJ;AAFP,GAAN;AAMH,CAPD;;AASA,MAAMoD,uCAAuC,GAAIC,wBAAD,IAA6B;AAEzE,SAAM;AACFtF,IAAAA,IAAI,EAAEjB,uCADJ;AAEFoB,IAAAA,OAAO,EAAE;AACLmF,MAAAA;AADK;AAFP,GAAN;AAMH,CARD;;AAUA,MAAMC,uCAAuC,GAAIC,yBAAD,IAA8B;AAC1E,SAAO;AACHxF,IAAAA,IAAI,EAAEhB,sCADH;AAEHmB,IAAAA,OAAO,EAACqF;AAFL,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMC,gCAAgC,GAAG,MAAK;AAEjD,SAAO,gBAAgBhF,QAAhB,EAA0B;AAC7BA,IAAAA,QAAQ,CAAC2E,uCAAuC,EAAxC,CAAR;;AACA,QAAG;AACC,YAAM7C,GAAG,GAAG,MAAM7H,KAAK,CAAC;AAChBmG,QAAAA,MAAM,EAAC,KADS;AAEhBC,QAAAA,GAAG,EAAEhB,QAAQ,GAAC,qBAFE;AAGhBiB,QAAAA,OAAO,EAAC;AACJ,oBAAS,kBADL;AAEJC,UAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmC;AAFvD;AAHQ,OAAD,CAAvB;AASI,YAAMsB,MAAM,GAAGD,GAAG,CAACpB,IAAnB;AACA,UAAIhB,OAAO,GAAC,EAAZ;AAGAqC,MAAAA,MAAM,CAACrB,IAAP,CAAY4D,GAAZ,CAAiBxC,GAAD,IAAO;AAEnB,YAAGA,GAAG,CAACmD,cAAJ,CAAmBT,MAAnB,GAA0B,CAA7B,EAA+B;AAE3B1C,UAAAA,GAAG,CAACmD,cAAJ,CAAmBX,GAAnB,CAAwBG,OAAD,IAAa;AAChC/E,YAAAA,OAAO,GAAC,CAAC,GAAGA,OAAJ,EAAY,EAAC,GAAG+E,OAAJ;AAChBC,cAAAA,OAAO,EAAC5C;AADQ,aAAZ,CAAR;AAIP,WALG;AAMP;AAAC,OAVF;;AAeA,UAAGA,GAAG,CAACpB,IAAJ,CAASC,OAAT,KAAmB,uBAAtB,EAA8C;AAC1CX,QAAAA,QAAQ,CAACkF,WAAW,EAAZ,CAAR;AACH,OAFD,MAGI;AAEAlF,QAAAA,QAAQ,CAAC4E,uCAAuC,CAAClF,OAAD,CAAxC,CAAR;AAEH;AAKR,KAzCD,CAyCC,OAAMqF,yBAAN,EAAgC;AAEzB/E,MAAAA,QAAQ,CAAC8E,uCAAuC,CAACC,yBAAyB,CAAC5E,QAA1B,CAAmCO,IAApC,CAAxC,CAAR;AAEP;AACJ,GAhDD;AAiDH,CAnDM,C,CAqDP;;AAEA,MAAMyE,kCAAkC,GAAG,MAAK;AAC5C,SAAM;AACF5F,IAAAA,IAAI,EAAErB,kCADJ;AAEFwB,IAAAA,OAAO,EAAE;AACL8B,MAAAA,OAAO,EAAE;AADJ;AAFP,GAAN;AAMH,CAPD;;AASA,MAAM4D,iCAAiC,GAAIC,mBAAD,IAAwB;AAE9D,SAAM;AACF9F,IAAAA,IAAI,EAAEpB,kCADJ;AAEFuB,IAAAA,OAAO,EAAE;AACL2F,MAAAA;AADK;AAFP,GAAN;AAMH,CARD;;AAUA,MAAMC,kCAAkC,GAAIC,oBAAD,IAAyB;AAChE,SAAO;AACHhG,IAAAA,IAAI,EAAEnB,iCADH;AAEHsB,IAAAA,OAAO,EAAC6F;AAFL,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMC,2BAA2B,GAAG,MAAK;AAE5C,SAAO,gBAAgBxF,QAAhB,EAA0B;AAC7BA,IAAAA,QAAQ,CAACmF,kCAAkC,EAAnC,CAAR;;AACA,QAAG;AACC,YAAMrD,GAAG,GAAG,MAAM7H,KAAK,CAAC;AAChBmG,QAAAA,MAAM,EAAC,KADS;AAEhBC,QAAAA,GAAG,EAAEhB,QAAQ,GAAC,mBAFE;AAGhBiB,QAAAA,OAAO,EAAC;AACJ,oBAAS,kBADL;AAEJC,UAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmC;AAFvD;AAHQ,OAAD,CAAvB;AASI,YAAMsB,MAAM,GAAGD,GAAG,CAACpB,IAAnB;;AACA,UAAGoB,GAAG,CAACpB,IAAJ,CAASC,OAAT,KAAmB,uBAAtB,EAA8C;AAC1CX,QAAAA,QAAQ,CAACkF,WAAW,EAAZ,CAAR;AACH,OAFD,MAGI;AAEAlF,QAAAA,QAAQ,CAACoF,iCAAiC,CAACrD,MAAD,CAAlC,CAAR;AAEH;AAKR,KAvBD,CAuBC,OAAMwD,oBAAN,EAA2B;AAEpBvF,MAAAA,QAAQ,CAACsF,kCAAkC,CAACC,oBAAoB,CAACpF,QAArB,CAA8BO,IAA/B,CAAnC,CAAR;AAEP;AACJ,GA9BD;AA+BH,CAjCM,C,CAoCP;;AAEA,MAAM+E,kCAAkC,GAAG,MAAK;AAC5C,SAAM;AACFlG,IAAAA,IAAI,EAAExB,kCADJ;AAEF2B,IAAAA,OAAO,EAAE;AACL8B,MAAAA,OAAO,EAAE;AADJ;AAFP,GAAN;AAMH,CAPD;;AASA,MAAMkE,iCAAiC,GAAIC,mBAAD,IAAwB;AAE9D,SAAM;AACFpG,IAAAA,IAAI,EAAEvB,kCADJ;AAEF0B,IAAAA,OAAO,EAAE;AACLiG,MAAAA;AADK;AAFP,GAAN;AAMH,CARD;;AAUA,MAAMC,kCAAkC,GAAIC,oBAAD,IAAyB;AAChE,SAAO;AACHtG,IAAAA,IAAI,EAAEtB,iCADH;AAEHyB,IAAAA,OAAO,EAACmG;AAFL,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMC,2BAA2B,GAAG,MAAK;AAE5C,SAAO,gBAAgB9F,QAAhB,EAA0B;AAC7BA,IAAAA,QAAQ,CAACyF,kCAAkC,EAAnC,CAAR;;AACA,QAAG;AACC,YAAM3D,GAAG,GAAG,MAAM7H,KAAK,CAAC;AAChBmG,QAAAA,MAAM,EAAC,KADS;AAEhBC,QAAAA,GAAG,EAAEhB,QAAQ,GAAC,mBAFE;AAGhBiB,QAAAA,OAAO,EAAC;AACJ,oBAAS,kBADL;AAEJC,UAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmC;AAFvD;AAHQ,OAAD,CAAvB;AASI,YAAMsB,MAAM,GAAGD,GAAG,CAACpB,IAAnB;;AACA,UAAGoB,GAAG,CAACpB,IAAJ,CAASC,OAAT,KAAmB,uBAAtB,EAA8C;AAC1CX,QAAAA,QAAQ,CAACkF,WAAW,EAAZ,CAAR;AACH,OAFD,MAGI;AAEAlF,QAAAA,QAAQ,CAAC0F,iCAAiC,CAAC3D,MAAD,CAAlC,CAAR;AAEH;AAKR,KAvBD,CAuBC,OAAM8D,oBAAN,EAA2B;AAEpB7F,MAAAA,QAAQ,CAAC4F,kCAAkC,CAACC,oBAAoB,CAAC1F,QAArB,CAA8BO,IAA/B,CAAnC,CAAR;AAEP;AACJ,GA9BD;AA+BH,CAjCM,C,CAmCP;;AAEA,MAAMqF,iCAAiC,GAAG,MAAK;AAC3C,SAAM;AACFxG,IAAAA,IAAI,EAAE3B,iCADJ;AAEF8B,IAAAA,OAAO,EAAE;AACL8B,MAAAA,OAAO,EAAE;AADJ;AAFP,GAAN;AAMH,CAPD;;AASA,MAAMwE,gCAAgC,GAAIC,kBAAD,IAAuB;AAE5D,SAAM;AACF1G,IAAAA,IAAI,EAAE1B,iCADJ;AAEF6B,IAAAA,OAAO,EAAE;AACLuG,MAAAA;AADK;AAFP,GAAN;AAMH,CARD;;AAUA,MAAMC,iCAAiC,GAAIC,mBAAD,IAAwB;AAC9D,SAAO;AACH5G,IAAAA,IAAI,EAAEzB,gCADH;AAEH4B,IAAAA,OAAO,EAACyG;AAFL,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMC,0BAA0B,GAAG,MAAK;AAE3C,SAAO,gBAAgBpG,QAAhB,EAA0B;AAC7BA,IAAAA,QAAQ,CAAC+F,iCAAiC,EAAlC,CAAR;;AACA,QAAG;AACC,YAAMjE,GAAG,GAAG,MAAM7H,KAAK,CAAC;AAChBmG,QAAAA,MAAM,EAAC,KADS;AAEhBC,QAAAA,GAAG,EAAEhB,QAAQ,GAAC,kBAFE;AAGhBiB,QAAAA,OAAO,EAAC;AACJ,oBAAS,kBADL;AAEJC,UAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmC;AAFvD;AAHQ,OAAD,CAAvB;AASI,YAAMsB,MAAM,GAAGD,GAAG,CAACpB,IAAnB;;AACA,UAAGoB,GAAG,CAACpB,IAAJ,CAASC,OAAT,KAAmB,uBAAtB,EAA8C;AAC1CX,QAAAA,QAAQ,CAACkF,WAAW,EAAZ,CAAR;AACH,OAFD,MAGI;AAEAlF,QAAAA,QAAQ,CAACgG,gCAAgC,CAACjE,MAAD,CAAjC,CAAR;AAEH;AAKR,KAvBD,CAuBC,OAAMoE,mBAAN,EAA0B;AAEnBnG,MAAAA,QAAQ,CAACkG,iCAAiC,CAACC,mBAAmB,CAAChG,QAApB,CAA6BO,IAA9B,CAAlC,CAAR;AAEP;AACJ,GA9BD;AA+BH,CAjCM,C,CAmCP;;AACA,MAAM2F,oBAAoB,GAAG,MAAK;AAE9B,SAAM;AACF9G,IAAAA,IAAI,EAAE9B;AADJ,GAAN;AAGH,CALD;;AAOA,MAAM6I,oBAAoB,GAAIC,aAAD,IAAkB;AAC3CtG,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BqG,aAA5B;AACA,SAAM;AACFhH,IAAAA,IAAI,EAAE7B,uBADJ;AAEFgC,IAAAA,OAAO,EAAE;AACL6G,MAAAA;AADK;AAFP,GAAN;AAMH,CARD;;AAUA,MAAMC,oBAAoB,GAAIC,cAAD,IAAmB;AAE5C,SAAO;AACHlH,IAAAA,IAAI,EAAE5B,sBADH;AAEH+B,IAAAA,OAAO,EAAC+G;AAFL,GAAP;AAIH,CAND;;AAQA,OAAO,MAAMC,SAAS,GAAKC,SAAD,IAAc;AAEpC,SAAO,gBAAgB3G,QAAhB,EAA0B;AAE7BA,IAAAA,QAAQ,CAACqG,oBAAoB,EAArB,CAAR;;AACJ,QAAG;AACA,YAAMlG,QAAQ,GAAG,MAAMlG,KAAK,CAAC2M,IAAN,CAAWvH,QAAQ,GAAE,cAArB,EAAmCsH,SAAnC,EACnB;AACCrG,QAAAA,OAAO,EAAC;AACJ,oBAAS,kBADL;AAEJC,UAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmC;AAFvD;AADT,OADmB,CAAvB;AASC,YAAMoG,KAAK,GAAG1G,QAAQ,CAACO,IAAvB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBC,QAAQ,CAACO,IAAhC;;AACA,UAAGP,QAAQ,IAAIA,QAAQ,CAACO,IAArB,IAA6BP,QAAQ,CAACO,IAAT,CAAcC,OAA3C,IAAsDR,QAAQ,CAACO,IAAT,CAAcC,OAAd,KAAwB,uBAAjF,EAAyG;AACrGX,QAAAA,QAAQ,CAACkF,WAAW,EAAZ,CAAR;AACH,OAFD,MAGI;AAEJlF,QAAAA,QAAQ,CAACsG,oBAAoB,CAACO,KAAD,CAArB,CAAR;AACA3H,QAAAA,KAAK,CAACiC,OAAN,CAAc,iEAAd;AACC;AAEJ,KArBD,CAqBC,OAAMsF,cAAN,EAAqB;AACnBxG,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BuG,cAAc,CAACtG,QAAf,CAAwBO,IAArD;AACCV,MAAAA,QAAQ,CAACwG,oBAAoB,CAACC,cAAc,CAACtG,QAAf,CAAwBO,IAAzB,CAArB,CAAR;AACH;AAEA,GA7BD;AA8BH,CAhCM,C,CAmCP;;AAEA,MAAMoG,oBAAoB,GAAG,MAAK;AAE9B,SAAM;AACFvH,IAAAA,IAAI,EAAE1C;AADJ,GAAN;AAGH,CALD;;AAOA,MAAMkK,oBAAoB,GAAIC,WAAD,IAAgB;AACzC,SAAM;AACFzH,IAAAA,IAAI,EAAEzC,gCADJ;AAEF4C,IAAAA,OAAO,EAAE;AACLsH,MAAAA;AADK;AAFP,GAAN;AAMH,CAPD;;AASA,MAAMC,oBAAoB,GAAIC,kBAAD,IAAuB;AAEhD,SAAO;AACH3H,IAAAA,IAAI,EAAExC,+BADH;AAEH2C,IAAAA,OAAO,EAACwH;AAFL,GAAP;AAIH,CAND;;AAQA,OAAO,MAAMC,aAAa,GAAKH,WAAD,IAAgB;AAE1C,SAAO,gBAAgBhH,QAAhB,EAA0B;AAE7BA,IAAAA,QAAQ,CAAC8G,oBAAoB,EAArB,CAAR;;AACJ,QAAG;AACA,YAAM3G,QAAQ,GAAG,MAAMlG,KAAK,CAAC2M,IAAN,CAAWvH,QAAQ,GAAE,WAArB,EAAgC2H,WAAhC,EACnB;AACC1G,QAAAA,OAAO,EAAC;AACJ,oBAAS,kBADL;AAEJC,UAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmC;AAFvD;AADT,OADmB,CAAvB;AASC,YAAMC,IAAI,GAAGP,QAAQ,CAACO,IAAtB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;;AACA,UAAGP,QAAQ,CAACO,IAAT,CAAcC,OAAd,KAAwB,uBAA3B,EAAmD;AAC/CX,QAAAA,QAAQ,CAACkF,WAAW,EAAZ,CAAR;AACH,OAFD,MAGI;AAEJlF,QAAAA,QAAQ,CAAC+G,oBAAoB,CAACrG,IAAD,CAArB,CAAR;AACAxB,QAAAA,KAAK,CAACiC,OAAN,CAAcT,IAAI,CAACC,OAAnB;AACC;AAEJ,KArBD,CAqBC,OAAMuG,kBAAN,EAAyB;AAEtBlH,MAAAA,QAAQ,CAACiH,oBAAoB,CAACC,kBAAkB,CAAC/G,QAAnB,CAA4BO,IAA7B,CAArB,CAAR;AACH;AAEA,GA7BD;AA8BH,CAhCM,C,CAkCP;;AAEA,OAAO,MAAO0G,gBAAgB,GAAG,MAAI;AACjC,SAAO;AACH7H,IAAAA,IAAI,EAAC3C;AADF,GAAP;AAGH,CAJM;;AAMP,MAAMyK,oCAAoC,GAAG,MAAK;AAC9CpH,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SAAM;AACFX,IAAAA,IAAI,EAAE9C;AADJ,GAAN;AAGH,CALD;;AAOA,MAAM6K,oCAAoC,GAAIC,wBAAD,IAA6B;AACtE,SAAM;AACFhI,IAAAA,IAAI,EAAE7C,2CADJ;AAEFgD,IAAAA,OAAO,EAAE;AACL6H,MAAAA;AADK;AAFP,GAAN;AAMH,CAPD;;AASA,MAAMC,oCAAoC,GAAIC,6BAAD,IAAkC;AAE3E,SAAO;AACHlI,IAAAA,IAAI,EAAE5C,0CADH;AAEH+C,IAAAA,OAAO,EAAC+H;AAFL,GAAP;AAIH,CAND;;AAQA,OAAO,MAAMC,4BAA4B,GAAKC,WAAD,IAAgB;AACzD1H,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA2CyH,WAA3C;AACA,SAAO,gBAAgB3H,QAAhB,EAA0B;AAE7BA,IAAAA,QAAQ,CAACqH,oCAAoC,EAArC,CAAR;;AACJ,QAAG;AACA,YAAMlH,QAAQ,GAAG,MAAMlG,KAAK,CAAC;AACxBmG,QAAAA,MAAM,EAAC,KADiB;AAExBC,QAAAA,GAAG,EAAEhB,QAAQ,GAAE,+BAA8BsI,WAAY,EAFjC;AAGxBrH,QAAAA,OAAO,EAAC;AACJ,0BAAe,kBADX;AAEJ,oBAAS,kBAFL;AAGJC,UAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmC;AAHvD;AAHgB,OAAD,CAA5B;AAUC,YAAMC,IAAI,GAAGP,QAAQ,CAACO,IAAtB;;AACA,UAAGP,QAAQ,CAACO,IAAT,CAAcC,OAAd,KAAwB,uBAA3B,EAAmD;AAC/CX,QAAAA,QAAQ,CAACkF,WAAW,EAAZ,CAAR;AACH,OAFD,MAGI;AAEJlF,QAAAA,QAAQ,CAACsH,oCAAoC,CAAC5G,IAAD,CAArC,CAAR;AACC;AAEJ,KApBD,CAoBC,OAAM+G,6BAAN,EAAoC;AAEjCzH,MAAAA,QAAQ,CAACwH,oCAAoC,CAACC,6BAAD,CAArC,CAAR;AACH;AAEA,GA5BD;AA6BH,CA/BM,C,CAiCP;;AACA,MAAMG,2BAA2B,GAAG,MAAK;AACrC,SAAM;AACFrI,IAAAA,IAAI,EAAEvC,6BADJ;AAEF0C,IAAAA,OAAO,EAAE;AACL8B,MAAAA,OAAO,EAAE;AADJ;AAFP,GAAN;AAMH,CAPD;;AASA,MAAMqG,2BAA2B,GAAIC,oBAAD,IAAyB;AAEzD,SAAM;AACFvI,IAAAA,IAAI,EAAEtC,6BADJ;AAEFyC,IAAAA,OAAO,EAAE;AACLoI,MAAAA;AADK;AAFP,GAAN;AAMH,CARD;;AAUA,MAAMC,4BAA4B,GAAIC,iBAAD,IAAsB;AAEvD,SAAO;AACHzI,IAAAA,IAAI,EAAErC,4BADH;AAEHwC,IAAAA,OAAO,EAACsI;AAFL,GAAP;AAIH,CAND;;AAQA,OAAO,MAAMC,oBAAoB,GAAIvI,OAAD,IAAY;AAE5C,SAAO,gBAAgBM,QAAhB,EAA0B;AAC7BA,IAAAA,QAAQ,CAAC4H,2BAA2B,EAA5B,CAAR;;AACA,QAAG;AACC,YAAM9F,GAAG,GAAG,MAAM7H,KAAK,CAAC;AAChBmG,QAAAA,MAAM,EAAC,KADS;AAEhBC,QAAAA,GAAG,EAAEhB,QAAQ,GAAC,iBAFE;AAGhBqB,QAAAA,IAAI,EAAEhB,OAHU;AAIhBY,QAAAA,OAAO,EAAC;AACPC,UAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmC;AADpD;AAJQ,OAAD,CAAvB;;AASG,UAAGqB,GAAG,CAACpB,IAAJ,CAASC,OAAT,KAAmB,uBAAtB,EAA8C;AAC1CX,QAAAA,QAAQ,CAACkF,WAAW,EAAZ,CAAR;AACH,OAFD,MAGI;AAEH,cAAMnD,MAAM,GAAGD,GAAG,CAACpB,IAAJ,CAASwH,QAAxB;AAEAlI,QAAAA,QAAQ,CAAC6H,2BAA2B,CAAC9F,MAAD,CAA5B,CAAR;AACA;AAEP,KApBD,CAoBC,OAAMiG,iBAAN,EAAwB;AAEjBhI,MAAAA,QAAQ,CAAC+H,4BAA4B,CAACC,iBAAiB,CAAC7H,QAAlB,CAA2BO,IAA5B,CAA7B,CAAR;AAEP;AACJ,GA3BD;AA4BH,CA9BM,C,CAiCP;;AACA,MAAMyH,+BAA+B,GAAG,MAAK;AACzC,SAAM;AACF5I,IAAAA,IAAI,EAAEjD,sCADJ;AAEFoD,IAAAA,OAAO,EAAE;AACL8B,MAAAA,OAAO,EAAE;AADJ;AAFP,GAAN;AAMH,CAPD;;AASA,MAAM4G,+BAA+B,GAAIC,4BAAD,IAAiC;AAErE,SAAM;AACF9I,IAAAA,IAAI,EAAEhD,sCADJ;AAEFmD,IAAAA,OAAO,EAAE;AACL2I,MAAAA;AADK;AAFP,GAAN;AAMH,CARD;;AAUA,MAAMC,gCAAgC,GAAIC,yBAAD,IAA8B;AAEnE,SAAO;AACHhJ,IAAAA,IAAI,EAAE/C,qCADH;AAEHkD,IAAAA,OAAO,EAAC6I;AAFL,GAAP;AAIH,CAND;;AAQA,OAAO,MAAMC,yBAAyB,GAAI9I,OAAD,IAAY;AAEjD,SAAO,gBAAgBM,QAAhB,EAA0B;AAC7BA,IAAAA,QAAQ,CAACmI,+BAA+B,EAAhC,CAAR;;AACA,QAAG;AACC,YAAMrG,GAAG,GAAG,MAAM7H,KAAK,CAAC;AAChBmG,QAAAA,MAAM,EAAC,KADS;AAEhBC,QAAAA,GAAG,EAAEhB,QAAQ,GAAC,yBAFE;AAGhBqB,QAAAA,IAAI,EAAEhB,OAHU;AAIhBY,QAAAA,OAAO,EAAC;AACPC,UAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmC;AADpD;AAJQ,OAAD,CAAvB;;AASG,UAAGqB,GAAG,CAACpB,IAAJ,CAASC,OAAT,KAAmB,uBAAtB,EAA8C;AAC1CX,QAAAA,QAAQ,CAACkF,WAAW,EAAZ,CAAR;AACH,OAFD,MAGI;AAEH,cAAMnD,MAAM,GAAGD,GAAG,CAACpB,IAAJ,CAASA,IAAxB;AAEAV,QAAAA,QAAQ,CAACoI,+BAA+B,CAACrG,MAAD,CAAhC,CAAR;AACA;AAEP,KApBD,CAoBC,OAAMwG,yBAAN,EAAgC;AAEzBvI,MAAAA,QAAQ,CAACsI,gCAAgC,CAACC,yBAAyB,CAACpI,QAA1B,CAAmCO,IAApC,CAAjC,CAAR;AAEP;AACJ,GA3BD;AA4BH,CA9BM,C,CA+BP;;AAEA,MAAM+H,wBAAwB,GAAG,MAAK;AAClC,SAAM;AACFlJ,IAAAA,IAAI,EAAEpC,sBADJ;AAEFuC,IAAAA,OAAO,EAAE;AACL8B,MAAAA,OAAO,EAAE;AADJ;AAFP,GAAN;AAMH,CAPD;;AASA,MAAMkH,wBAAwB,GAAIC,aAAD,IAAkB;AAE/C,SAAM;AACFpJ,IAAAA,IAAI,EAAEnC,sBADJ;AAEFsC,IAAAA,OAAO,EAAE;AACLiJ,MAAAA;AADK;AAFP,GAAN;AAMH,CARD;;AAUA,MAAMC,yBAAyB,GAAIC,UAAD,IAAe;AAE7C,SAAO;AACHtJ,IAAAA,IAAI,EAAElC,qBADH;AAEHqC,IAAAA,OAAO,EAACmJ;AAFL,GAAP;AAIH,CAND;;AAQA,OAAO,MAAMC,iBAAiB,GAAIpJ,OAAD,IAAY;AAEzC,SAAO,gBAAgBM,QAAhB,EAA0B;AAC7BA,IAAAA,QAAQ,CAACyI,wBAAwB,EAAzB,CAAR;;AACA,QAAG;AACC,YAAM3G,GAAG,GAAG,MAAM7H,KAAK,CAAC;AAChBmG,QAAAA,MAAM,EAAC,KADS;AAEhBC,QAAAA,GAAG,EAAEhB,QAAQ,GAAC,cAFE;AAGhBqB,QAAAA,IAAI,EAAEhB,OAHU;AAIhBY,QAAAA,OAAO,EAAC;AACPC,UAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmC;AADpD;AAJQ,OAAD,CAAvB;;AASG,UAAGqB,GAAG,CAACpB,IAAJ,CAASC,OAAT,KAAmB,uBAAtB,EAA8C;AAC1CX,QAAAA,QAAQ,CAACkF,WAAW,EAAZ,CAAR;AACH,OAFD,MAGI;AAEH,cAAMnD,MAAM,GAAGD,GAAG,CAACpB,IAAnB;AAEAV,QAAAA,QAAQ,CAAC0I,wBAAwB,CAAC3G,MAAD,CAAzB,CAAR;AACA;AAEP,KApBD,CAoBC,OAAM8G,UAAN,EAAiB;AAEV7I,MAAAA,QAAQ,CAAC4I,yBAAyB,CAACC,UAAU,CAAC1I,QAAX,CAAoBO,IAArB,CAA1B,CAAR;AAEP;AACJ,GA3BD;AA4BH,CA9BM,C,CAgCP;;AAGA,MAAMqI,oBAAoB,GAAG,MAAK;AAE9B,SAAM;AACFxJ,IAAAA,IAAI,EAAEjC;AADJ,GAAN;AAGH,CALD;;AAOA,MAAM0L,oBAAoB,GAAIC,WAAD,IAAgB;AACzC,SAAM;AACF1J,IAAAA,IAAI,EAAEhC,2BADJ;AAEFmC,IAAAA,OAAO,EAAE;AACLuJ,MAAAA;AADK;AAFP,GAAN;AAMH,CAPD;;AASA,MAAMC,oBAAoB,GAAIC,YAAD,IAAiB;AAE1C,SAAO;AACH5J,IAAAA,IAAI,EAAE/B,0BADH;AAEHkC,IAAAA,OAAO,EAACyJ;AAFL,GAAP;AAIH,CAND;;AAQA,OAAO,MAAMC,aAAa,GAAKH,WAAD,IAAgB;AAE1C,SAAO,gBAAgBjJ,QAAhB,EAA0B;AAE7BA,IAAAA,QAAQ,CAAC+I,oBAAoB,EAArB,CAAR;;AACJ,QAAG;AACA,YAAM5I,QAAQ,GAAG,MAAMlG,KAAK,CAAC2M,IAAN,CAAWvH,QAAQ,GAAE,gBAArB,EAAqC4J,WAArC,EACnB;AACC3I,QAAAA,OAAO,EAAC;AACJ,oBAAS,kBADL;AAEJC,UAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmC;AAFvD;AADT,OADmB,CAAvB;AASC,YAAMC,IAAI,GAAGP,QAAQ,CAACO,IAAtB;;AAEA,UAAGP,QAAQ,CAACO,IAAT,CAAcC,OAAd,KAAwB,uBAA3B,EAAmD;AAC/CX,QAAAA,QAAQ,CAACkF,WAAW,EAAZ,CAAR;AACH,OAFD,MAGI;AAEJlF,QAAAA,QAAQ,CAACgJ,oBAAoB,CAACtI,IAAD,CAArB,CAAR;AACAxB,QAAAA,KAAK,CAACiC,OAAN,CAAc,cAAd;AACC;AAEJ,KArBD,CAqBC,OAAMgI,YAAN,EAAmB;AAEhBnJ,MAAAA,QAAQ,CAACkJ,oBAAoB,CAACC,YAAY,CAAChJ,QAAb,CAAsBO,IAAvB,CAArB,CAAR;AACH;AAEA,GA7BD;AA8BH,CAhCM,C,CAmCP;;AAEA,MAAM2I,iBAAiB,GAAG,MAAK;AAC3B,SAAM;AACF9J,IAAAA,IAAI,EAAEzD;AADJ,GAAN;AAGH,CAJD;;AAMA,MAAMwN,iBAAiB,GAAIxG,IAAD,IAAS;AAC/B,SAAM;AACFvD,IAAAA,IAAI,EAAExD,oBADJ;AAEF2D,IAAAA,OAAO,EAAE;AACLoD,MAAAA;AADK;AAFP,GAAN;AAMH,CAPD;;AASA,MAAMyG,iBAAiB,GAAIvG,KAAD,IAAU;AAEhC,SAAO;AACHzD,IAAAA,IAAI,EAAE1D,oBADH;AAEH6D,IAAAA,OAAO,EAACsD,KAAK,CAACwG;AAFX,GAAP;AAIH,CAND;;AAQA,OAAO,MAAMC,UAAU,GAAG,CAAC3G,IAAD,EAAMI,OAAN,KAAiB;AAEvC,SAAO,gBAAgBlD,QAAhB,EAA2B;AAC9BA,IAAAA,QAAQ,CAACqJ,iBAAiB,EAAlB,CAAR;;AACA,QAAG;AACC,YAAMvH,GAAG,GAAG,MAAM7H,KAAK,CAAC;AACpBmG,QAAAA,MAAM,EAAC,MADa;AAEpBC,QAAAA,GAAG,EAAEhB,QAAQ,GAAC,WAFM;AAGpBqB,QAAAA,IAAI,EAAEoC;AAHc,OAAD,CAAvB;AAKI,YAAM;AAACpC,QAAAA;AAAD,UAASoB,GAAG,CAACpB,IAAnB;;AAEA,UAAGoB,GAAG,CAACpB,IAAJ,CAASS,OAAT,KAAoB,KAApB,IAA6BW,GAAG,CAAC6B,MAAJ,KAAc,GAA3C,IAAkD7B,GAAG,CAACpB,IAAJ,CAAS8I,MAA9D,EAAqE;AACjExJ,QAAAA,QAAQ,CAACsJ,iBAAiB,CAACxH,GAAG,CAACpB,IAAJ,CAASgJ,KAAV,CAAlB,CAAR;AACAxK,QAAAA,KAAK,CAACiC,OAAN,CAAc,uBAAd;AACJ,OAHA,MAIG;AACAnB,QAAAA,QAAQ,CAACuJ,iBAAiB,CAAC7I,IAAD,CAAlB,CAAR;AACH,OAdL,CAgBC;AACA;AACI;;AACP,KAnBD,CAmBC,OAAMsC,KAAN,EAAY;AAET,UAAGA,KAAK,CAAC7C,QAAN,IAAkB6C,KAAK,CAAC7C,QAAN,CAAewD,MAAf,KAAyB,GAA9C,EAAkD;AAC9C3D,QAAAA,QAAQ,CAACuJ,iBAAiB,CAACvG,KAAK,CAAC7C,QAAN,CAAeO,IAAhB,CAAlB,CAAR;AAEJ,OAHA,MAIG;AACAV,QAAAA,QAAQ,CAACuJ,iBAAiB,CAACvG,KAAD,CAAlB,CAAR;AACH;AAKH;AACJ,GAnCD;AAoCH,CAtCM,C,CAwCP;;AAEA,MAAM2G,iBAAiB,GAAG,MAAK;AAC3B,SAAO;AACHpK,IAAAA,IAAI,EAAE5D;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMiO,iBAAiB,GAAIlK,OAAD,IAAY;AAClC,SAAO;AACHH,IAAAA,IAAI,EAAE3D,oBADH;AAEH8D,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,MAAMmK,iBAAiB,GAAI7G,KAAD,IAAU;AAEhC,SAAO;AACHzD,IAAAA,IAAI,EAAE7D,oBADH;AAEHgE,IAAAA,OAAO,EAAEsD;AAFN,GAAP;AAIH,CAND;;AAQA,OAAO,MAAM8G,UAAU,GAAG,CAACpK,OAAD,EAASwD,OAAT,KAAoB;AAE1C,SAAO,gBAAgBlD,QAAhB,EAA0B;AAE7BA,IAAAA,QAAQ,CAAC2J,iBAAD,CAAR;;AACA,QAAG;AAEA,YAAM7H,GAAG,GAAE,MAAM7H,KAAK,CAAC;AAClBmG,QAAAA,MAAM,EAAC,MADW;AAElBC,QAAAA,GAAG,EAAEhB,QAAQ,GAAC,QAFI;AAGlBqB,QAAAA,IAAI,EAAChB,OAHa;AAIlBY,QAAAA,OAAO,EAAC;AACJ,0BAAe,kBADX;AAEJ,oBAAS;AAFL;AAJU,OAAD,CAAtB;AAUC,YAAM;AAACkD,QAAAA,YAAD;AAAcuG,QAAAA,EAAd;AAAkBC,QAAAA,SAAS,EAAC;AAACvG,UAAAA;AAAD;AAA5B,UAAuC3B,GAAG,CAACpB,IAAjD;AAGIF,MAAAA,YAAY,CAACkD,OAAb,CAAqB,YAArB,EAAkCF,YAAlC,EAfL,CAgBK;;AACAhD,MAAAA,YAAY,CAACkD,OAAb,CAAqB,SAArB,EAA+BqG,EAA/B;AACAvJ,MAAAA,YAAY,CAACkD,OAAb,CAAqB,WAArB,EAAiCD,IAAjC;AACAzD,MAAAA,QAAQ,CAAC4J,iBAAiB,CAAC;AAACpG,QAAAA,YAAD;AAAcuG,QAAAA,EAAd;AAAiBtG,QAAAA;AAAjB,OAAD,CAAlB,CAAR;AACAvE,MAAAA,KAAK,CAACiC,OAAN,CAAc,sBAAd;AACP,KArBD,CAqBC,OAAM6B,KAAN,EAAY;AACT,UAAGA,KAAK,CAAC7C,QAAN,IAAkB6C,KAAK,CAAC7C,QAAN,CAAewD,MAAf,KAA0B,GAA/C,EAAmD;AAC/C3D,QAAAA,QAAQ,CAAC6J,iBAAiB,CAAC7G,KAAK,CAAC7C,QAAN,CAAeO,IAAhB,CAAlB,CAAR;AAEJ,OAHA,MAIG;AACAV,QAAAA,QAAQ,CAACuJ,iBAAiB,CAACvG,KAAD,CAAlB,CAAR;AACH;AAGH;AAEJ,GApCD;AAqCH,CAvCM,C,CAyCP;;AAEA,OAAO,MAAMiH,kBAAkB,GAAG,MAAK;AACnC,SAAO;AACH1K,IAAAA,IAAI,EAAEtD;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMiO,kBAAkB,GAAG,MAAK;AACnC,SAAO;AACL3K,IAAAA,IAAI,EAAErD;AADD,GAAP;AAGD,CAJI;AAMP,OAAO,MAAMiO,kBAAkB,GAAG,MAAK;AACnC,SAAO;AACH5K,IAAAA,IAAI,EAAEvD;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMkJ,WAAW,GAAG,MAAK;AAC5B,SAAO,gBAAelF,QAAf,EAAwB;AAC3BA,IAAAA,QAAQ,CAACiK,kBAAkB,EAAnB,CAAR;;AACA,QAAG;AAEC,YAAMnI,GAAG,GAAE,MAAM7H,KAAK,CAAC;AAClBmG,QAAAA,MAAM,EAAC,MADW;AAElBC,QAAAA,GAAG,EAAEhB,QAAQ,GAAC,SAFI;AAGlBiB,QAAAA,OAAO,EAAC;AACJ,0BAAe,kBADX;AAEJ,oBAAS;AAFL;AAHU,OAAD,CAAtB;AAQJE,MAAAA,YAAY,CAACuD,UAAb,CAAwB,YAAxB,EAVG,CAWH;;AACAvD,MAAAA,YAAY,CAACuD,UAAb,CAAwB,SAAxB;AACAvD,MAAAA,YAAY,CAACuD,UAAb,CAAwB,WAAxB;AACA7E,MAAAA,KAAK,CAACiC,OAAN,CAAc,YAAd;AACK,KAfL,CAgBI,OAAM6B,KAAN,EAAY;AACR,UAAGxC,YAAY,CAACC,OAAb,CAAqB,YAArB,MAAsC,IAAzC,EAA8C;AAC1CT,QAAAA,QAAQ,CAACmK,kBAAkB,EAAnB,CAAR;AACH,OAFD,MAGI;AACAnK,QAAAA,QAAQ,CAACkK,kBAAkB,EAAnB,CAAR;AACH;AACJ;AAER,GA3BD;AA4BH,CA7BM,C,CAgCP;AAEA;;AAEA,MAAME,wBAAwB,GAAG,MAAK;AAClC,SAAM;AACF7K,IAAAA,IAAI,EAAEZ,iDADJ;AAEFe,IAAAA,OAAO,EAAE;AACL8B,MAAAA,OAAO,EAAE;AADJ;AAFP,GAAN;AAMH,CAPD;;AASA,MAAM6I,wBAAwB,GAAIC,SAAD,IAAc;AAE3C,SAAM;AACF/K,IAAAA,IAAI,EAAEX,iDADJ;AAEFc,IAAAA,OAAO,EAAE;AACL4K,MAAAA;AADK;AAFP,GAAN;AAMH,CARD;;AAUA,MAAMC,wBAAwB,GAAIC,cAAD,IAAmB;AAChD,SAAO;AACHjL,IAAAA,IAAI,EAAEV,gDADH;AAEHa,IAAAA,OAAO,EAAC8K;AAFL,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMC,iBAAiB,GAAI/K,OAAD,IAAY;AAEzC,SAAO,gBAAgBM,QAAhB,EAA0B;AAC7BA,IAAAA,QAAQ,CAACoK,wBAAwB,EAAzB,CAAR;;AACA,QAAG;AACC,YAAMtI,GAAG,GAAG,MAAM7H,KAAK,CAAC;AAChBmG,QAAAA,MAAM,EAAC,KADS;AAEhBC,QAAAA,GAAG,EAAEjB,SAAS,GAAC;AAFC,OAAD,CAAvB;AAQI,YAAM2C,MAAM,GAAGD,GAAG,CAACpB,IAAnB;AACA,UAAIhB,OAAO,GAAC,EAAZ,CAVL,CAYK;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAChB;;AAEgBqC,MAAAA,MAAM,CAACuC,GAAP,CAAYxC,GAAD,IAAO;AAEf,YAAGA,GAAG,CAAC4I,sBAAJ,CAA2BlG,MAA3B,GAAkC,CAArC,EAAuC;AACjC1C,UAAAA,GAAG,CAAC4I,sBAAJ,CAA2BpG,GAA3B,CAAgCvC,MAAD,IAAY;AAExC,gBAAGA,MAAM,CAAC4I,iBAAP,CAAyBnG,MAAzB,GAAgC,CAAnC,EAAqC;AAC/BzC,cAAAA,MAAM,CAAC4I,iBAAP,CAAyBrG,GAAzB,CAA8BsG,KAAD,IAAS;AACpClL,gBAAAA,OAAO,GAAC,CAAC,GAAGA,OAAJ,EAAa,EAAE,GAAGkL,KAAL;AACjBC,kBAAAA,WAAW,EAAC9I,MADK;AAEjBmG,kBAAAA,QAAQ,EAACpG;AAFQ,iBAAb,CAAR;AAKD,eAND;AAOR;AACN,WAXK;AAYT;AAAC,OAfD,EA5DL,CA4EX;;AAEgB7B,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBR,OAAtB;AAEAM,MAAAA,QAAQ,CAAC;AAACT,QAAAA,IAAI,EAACT,iBAAN;AAAwBY,QAAAA;AAAxB,OAAD,CAAR;AACAM,MAAAA,QAAQ,CAACqK,wBAAwB,CAACtI,MAAD,CAAzB,CAAR,CAjFL,CAkFK;AAGP,KArFD,CAqFC,OAAMyI,cAAN,EAAqB;AAEdxK,MAAAA,QAAQ,CAACuK,wBAAwB,CAACC,cAAc,CAACrK,QAAf,CAAwBO,IAAzB,CAAzB,CAAR;AAEP;AACJ,GA5FD;AA6FH,CA/FM,C,CAiGP;;AAEA,MAAMoK,6BAA6B,GAAG,MAAK;AACvC,SAAM;AACFvL,IAAAA,IAAI,EAAER,6CADJ;AAEFW,IAAAA,OAAO,EAAE;AACL8B,MAAAA,OAAO,EAAE;AADJ;AAFP,GAAN;AAMH,CAPD;;AASA,MAAMuJ,6BAA6B,GAAIC,oBAAD,IAAyB;AAE3D,SAAM;AACFzL,IAAAA,IAAI,EAAEP,6CADJ;AAEFU,IAAAA,OAAO,EAAE;AACLsL,MAAAA;AADK;AAFP,GAAN;AAMH,CARD;;AAUA,MAAMC,6BAA6B,GAAIC,yBAAD,IAA8B;AAChE,SAAO;AACH3L,IAAAA,IAAI,EAAEN,4CADH;AAEHS,IAAAA,OAAO,EAACwL;AAFL,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMC,yBAAyB,GAAIzL,OAAD,IAAY;AAEjD,SAAO,gBAAgBM,QAAhB,EAA0B;AAC7BA,IAAAA,QAAQ,CAAC8K,6BAA6B,EAA9B,CAAR;;AACA,QAAG;AACC,YAAMhJ,GAAG,GAAG,MAAM7H,KAAK,CAAC;AAChBmG,QAAAA,MAAM,EAAC,KADS;AAEhBC,QAAAA,GAAG,EAAEjB,SAAS,GAAC;AAFC,OAAD,CAAvB;AAKI,YAAM2C,MAAM,GAAGD,GAAG,CAACpB,IAAnB;AAGAV,MAAAA,QAAQ,CAAC+K,6BAA6B,CAAChJ,MAAD,CAA9B,CAAR;AAGP,KAZD,CAYC,OAAMyI,cAAN,EAAqB;AAEdxK,MAAAA,QAAQ,CAACiL,6BAA6B,CAACT,cAAc,CAACrK,QAAf,CAAwBO,IAAzB,CAA9B,CAAR;AAEP;AACJ,GAnBD;AAoBH,CAtBM","sourcesContent":["import axios from 'axios';\n\nimport {\n    SIGN_IN_ADMIN_FAILURE,\n    SIGN_IN_ADMIN_REQUEST,\n    SIGN_IN_ADMIN_SUCCESS,\n    SIGN_UP_ADMIN_FAILURE,\n    SIGN_UP_ADMIN_REQUEST,\n    SIGN_UP_ADMIN_SUCCESS,\n    SIGN_OUT_ADMIN_FAILURE,\n    SIGN_OUT_ADMIN_REQUEST,\n    SIGN_OUT_ADMIN_SUCCESS,\n\n    GET_ALL_SERVICES_PENDING_REQUEST_ADMIN,\n    GET_ALL_SERVICES_PENDING_SUCCESS_ADMIN,\n    GET_ALL_SERVICES_PENDING_FAILURE_ADMIN,\n    GET_ALL_SERVICES_ACCEPTED_REQUEST_ADMIN,\n    GET_ALL_SERVICES_ACCEPTED_SUCCESS_ADMIN,\n    GET_ALL_SERVICES_ACCEPTED_FAILURE_ADMIN,\n    GET_ALL_SERVICES_REJECTED_REQUEST_ADMIN,\n    GET_ALL_SERVICES_REJECTED_SUCCESS_ADMIN,\n    GET_ALL_SERVICES_REJECTED_FAILURE_ADMIN,\n\n    REJECT_SERVICE_PENDING_REQUEST_ADMIN,\n    REJECT_SERVICE_PENDING_SUCCESS_ADMIN,\n    REJECT_SERVICE_PENDING_FAILED_ADMIN,\n\n    ACCCEPT_SERVICE_REQUEST_ADMIN,\n    ACCCEPT_SERVICE_SUCCESS_ADMIN,\n    ACCCEPT_SERVICE_FAILED_ADMIN,\n\n    SIGN_IN_USER_FAILURE,\n    SIGN_IN_USER_REQUEST,\n    SIGN_IN_USER_SUCCESS,\n    SIGN_UP_USER_FAILURE,\n    SIGN_UP_USER_REQUEST,\n    SIGN_UP_USER_SUCCESS,\n    SIGN_OUT_USER_FAILURE,\n    SIGN_OUT_USER_REQUEST,\n    SIGN_OUT_USER_SUCCESS,\n\n    ACCEPTED,\n    REJECTED,\n    PENDING,\n\n    GET_ALL_CATEGORY_ACCEPTED_REQUEST_USER,\n    GET_ALL_CATEGORY_ACCEPTED_SUCCESS_USER,\n    GET_ALL_CATEGORY_ACCEPTED_FAILED_USER,\n\n    GET_SUBCATEGORY_BY_CATEGORY_ID_REQUEST_USER,\n    GET_SUBCATEGORY_BY_CATEGORY_ID_SUCCESS_USER,\n    GET_SUBCATEGORY_BY_CATEGORY_ID_FAILED_USER,\n    EMPTY_SUBCATEGORY,\n\n    POST_CREATE_SERVICE_REQUEST_USER,\n    POST_CREATE_SERVICE_SUCCESS_USER,\n    POST_CREATE_SERVICE_FAILED_USER,\n\n    GET_ALL_CATEGORY_REQUEST_USER,\n    GET_ALL_CATEGORY_SUCCESS_USER,\n    GET_ALL_CATEGORY_FAILED_USER,\n\n    GET_ROOMS_REQUEST_USER,\n    GET_ROOMS_SUCCESS_USER,\n    GET_ROOMS_FAILED_USER,\n\n    CONTACT_SELLER_REQUEST_USER,\n    CONTACT_SELLER_SUCCESS_USER,\n    CONTACT_SELLER_FAILED_USER,\n\n    POST_ORDER_REQUEST_USER,\n    POST_ORDER_SUCCESS_USER,\n    POST_ORDER_FAILED_USER,\n\n    GET_MY_ORDER_PENDING_REQUEST_USER,\n    GET_MY_ORDER_PENDING_SUCCESS_USER,\n    GET_MY_ORDER_PENDING_FAILED_USER,\n\n    GET_MY_ORDER_ACCEPTED_REQUEST_USER,\n    GET_MY_ORDER_ACCEPTED_SUCCESS_USER,\n    GET_MY_ORDER_ACCEPTED_FAILED_USER,\n\n    GET_MY_ORDER_REJECTED_REQUEST_USER,\n    GET_MY_ORDER_REJECTED_SUCCESS_USER,\n    GET_MY_ORDER_REJECTED_FAILED_USER,\n\n    GET_RECEIVED_ORDER_PENDING_REQUEST_USER,\n    GET_RECEIVED_ORDER_PENDING_SUCCESS_USER,\n    GET_RECEIVED_ORDER_PENDING_FAILED_USER,\n\n    GET_RECEIVED_ORDER_ACCEPTED_REQUEST_USER,\n    GET_RECEIVED_ORDER_ACCEPTED_SUCCESS_USER,\n    GET_RECEIVED_ORDER_ACCEPTED_FAILED_USER,\n\n\n    GET_ALL_SUCATEGORY_CATEGORY_SERVICE_REQUEST_GUEST,\n    GET_ALL_SUCATEGORY_CATEGORY_SERVICE_SUCCESS_GUEST,\n    GET_ALL_SUCATEGORY_CATEGORY_SERVICE_FAILED_GUEST,\n    ACCEPTED_SERVICES,\n\n    GET_ALL_SUB_ILLUSTRATOR_SERVICE_REQUEST_GUEST,\n    GET_ALL_SUB_ILLUSTRATOR_SERVICE_SUCCESS_GUEST,\n    GET_ALL_SUB_ILLUSTRATOR_SERVICE_FAILED_GUEST, \n\n} from './action-types';\n\nimport {toast} from \"react-toastify\";\n\nimport { URL_Admin,URL_Guest,URL_User } from \"../components/URL\";\n\n//////////////////////////////ADMIN/////////////////////////////////////////////////////////\n\n/////////////////////REJECT PENDING REQUEST /////////////////////////////////\nconst rejectServiceRequestAdmin = () =>{\n    \n    return{\n        type: REJECT_SERVICE_PENDING_REQUEST_ADMIN,\n    };\n};\n\nconst rejectServiceSuccessAdmin = (rejectServiceAdminData) =>{\n    return{\n        type: REJECT_SERVICE_PENDING_SUCCESS_ADMIN,\n        payload: {\n            rejectServiceAdminData\n        }\n    };\n};\n\nconst rejectServiceFailureAdmin = (rejectServiceDataError) =>{\n   \n    return {\n        type: REJECT_SERVICE_PENDING_FAILED_ADMIN,\n        payload:rejectServiceDataError\n    };\n};\n\nexport const rejectServiceAdmin =  (reason_for_rejection,service_id) =>{\n   \n    return async function (dispatch) {\nconsole.log('reason_for_rejection',reason_for_rejection)\n        dispatch(rejectServiceRequestAdmin());\n    try{\n       const response = await axios({\n            method:\"post\",\n            url: URL_Admin+`/rejectPendingServices/${service_id}`,\n            headers:{\n                \"Content-type\":\"application/json\",\n                \"Accept\":\"application/json\",\n                Authorization:`Bearer ${localStorage.getItem(\"ADMIN-TOKEN\")}`\n            },\n            data:reason_for_rejection\n        });\n\n        const data = response.data;\n        if(response.data.message===\"You must be logged in as Admin\"){  \n            dispatch(signOutAdmin())\n        }\n        else{\n            // toast.success(data.message);\n        dispatch(rejectServiceSuccessAdmin(data));\n\n        }\n                        \n    }catch(rejectServiceDataError){\n     \n        dispatch(rejectServiceFailureAdmin(rejectServiceDataError));\n    }\n     \n    };\n};\n\n\n\n////////////ACCEPT PENDING REQUEST ////////////////////////\nconst accepteServiceRequestAdmin = () =>{\n    \n    return{\n        type: ACCCEPT_SERVICE_REQUEST_ADMIN,\n    };\n};\n\nconst accepteServiceSuccessAdmin = (acceptedServiceAdminData) =>{\n    return{\n        type: ACCCEPT_SERVICE_SUCCESS_ADMIN,\n        payload: {\n            acceptedServiceAdminData\n        }\n    };\n};\n\nconst accepteServiceFailureAdmin = (acceptedServiceDataError) =>{\n   \n    return {\n        type: ACCCEPT_SERVICE_FAILED_ADMIN,\n        payload:acceptedServiceDataError\n    };\n};\n\nexport const acceptServiceAdmin =  (service_id) =>{\n   console.log('hey')\n    return async function (dispatch) {\n\n        dispatch(accepteServiceRequestAdmin());\n    try{\n       const response = await axios({\n            method:\"put\",\n            url: URL_Admin+`/acceptService/${service_id}`,\n            headers:{\n                \"Content-type\":\"application/json\",\n                \"Accept\":\"application/json\",\n                Authorization:`Bearer ${localStorage.getItem(\"ADMIN-TOKEN\")}`\n            }\n        });\n\n        const data = response.data;\n        if(response.data.message===\"You must be logged in as Admin\"){  \n            dispatch(signOutAdmin())\n        }\n        else{\n            toast.success(data.message);\n        dispatch(accepteServiceSuccessAdmin(data));\n\n        }\n                        \n    }catch(acceptedServiceDataError){\n     \n        dispatch(accepteServiceFailureAdmin(acceptedServiceDataError));\n    }\n     \n    };\n};\n\n////////TOGGLE SCREENS/////////\n\nexport const pendingScreen = () =>\n{\n    return  {\n        type:PENDING\n    }\n}\nexport const rejectedScreen = () =>\n{\n    return  {\n        type:REJECTED\n    }\n}\n\nexport const acceptedScreen = () =>\n{\n    return  {\n        type:ACCEPTED\n    }\n}\n\n// GET ALL REJECTED SERVICES///\n\nconst fetchAllRejectedServicesRequest = () =>{\n    return{\n        type: GET_ALL_SERVICES_REJECTED_REQUEST_ADMIN,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchAllRejectedServicesSuccess = (rejectedServiceData) =>{\n    \n    return{\n        type: GET_ALL_SERVICES_REJECTED_SUCCESS_ADMIN,\n        payload: {\n            rejectedServiceData\n        }\n    };\n};\n\nconst fetchAllRejectedServicesFailure = (errorRejected) =>{\n    return {\n        type: GET_ALL_SERVICES_REJECTED_FAILURE_ADMIN,\n        payload:errorRejected\n    };\n};\n\nexport const fetchRejectedServices = (payload) =>{\n    \n    return async function (dispatch) {\n        dispatch(fetchAllRejectedServicesRequest());\n        try{\n            const res = await axios({\n                    method:\"get\",\n                    url: URL_Admin+'/getAllServiceRejected',\n                    data: payload,\n                    headers:{\n                     Authorization:`Bearer ${localStorage.getItem(\"ADMIN-TOKEN\")}`\n                     }\n                });\n               if(res.data.message===\"You must be logged in as Admin\"){\n                   dispatch(signOutAdmin())\n               }\n               else{\n                const result = res.data.data; \n                dispatch(fetchAllRejectedServicesSuccess(result));\n               }\n                \n        }catch(errorRejected){\n           \n                dispatch(fetchAllRejectedServicesFailure(errorRejected.response.data));\n\n        }\n    };\n};\n\n\n// GET ALL ACCEPTED SERVICES///\nconst fetchAllAcceptedServicesRequest = () =>{\n    return{\n        type: GET_ALL_SERVICES_ACCEPTED_REQUEST_ADMIN,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchAllAcceptedServicesSuccess = (acceptedServiceData) =>{\n    \n    return{\n        type: GET_ALL_SERVICES_ACCEPTED_SUCCESS_ADMIN,\n        payload: {\n            acceptedServiceData\n        }\n    };\n};\n\nconst fetchAllAcceptedServicesFailure = (errorAccepted) =>{\n   \n    return {\n        type: GET_ALL_SERVICES_ACCEPTED_FAILURE_ADMIN,\n        payload:errorAccepted\n    };\n};\n\nexport const fetchAcceptedServices = (payload) =>{\n    \n    return async function (dispatch) {\n        dispatch(fetchAllAcceptedServicesRequest());\n        try{\n            const res = await axios({\n                    method:\"get\",\n                    url: URL_Admin+'/getAllServiceAccepted',\n                    data: payload,\n                    headers:{\n                     Authorization:`Bearer ${localStorage.getItem(\"ADMIN-TOKEN\")}`\n                     }\n                });\n               if(res.data.message===\"You must be logged in as Admin\"){\n                   dispatch(signOutAdmin())\n               }\n               else{\n                const result = res.data.data; \n                dispatch(fetchAllAcceptedServicesSuccess(result));\n               }\n                \n        }catch(errorAccepted){\n          \n                dispatch(fetchAllAcceptedServicesFailure(errorAccepted.response.data));\n              \n        }\n    };\n};\n\n\n//// GET ALL PENDING SERVICES/////\n\nconst fetchAllPendingServicesRequest = () =>{\n    return{\n        type: GET_ALL_SERVICES_PENDING_REQUEST_ADMIN,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchAllPendingServicesSuccess = (pendingServiceData) =>{\n    \n    return{\n        type: GET_ALL_SERVICES_PENDING_SUCCESS_ADMIN,\n        payload: {\n            pendingServiceData\n        }\n    };\n};\n\nconst fetchAllPendingServicesFailure = (errorPending) =>{\n    return {\n        type: GET_ALL_SERVICES_PENDING_FAILURE_ADMIN,\n        payload:errorPending\n    };\n};\n\nexport const fetchPendingServices = (payload) =>{\n       \n    return async function (dispatch) {\n        dispatch(fetchAllPendingServicesRequest());\n        try{\n            const res = await axios({\n                    method:\"get\",\n                    url: URL_Admin+'/getAllServicePending',\n                    data: payload,\n                    headers:{\n                     Authorization:`Bearer ${localStorage.getItem(\"ADMIN-TOKEN\")}`\n                     }\n                });\n               if(res.data.message===\"You must be logged in as Admin\"){\n                   dispatch(signOutAdmin())\n               }\n               else{\n                   \n                const result = res.data.data; \n                dispatch(fetchAllPendingServicesSuccess(result));\n                // dispatch(fetchAllAcceptedServicesFailure(\"\")); \n               }\n                \n        }catch(errorPending){\n           \n                dispatch(fetchAllPendingServicesFailure(errorPending.response.data));\n                \n        }\n    };\n};\n\n// SIGN UP ADMIN\n\nconst signUpRequestAdmin = () =>{\n    return{\n        type: SIGN_UP_ADMIN_REQUEST,\n    };\n};\n\nconst signUpSuccessAdmin = (user) =>{\n    return{\n        type: SIGN_UP_ADMIN_SUCCESS,\n        payload: {\n            user\n        }\n    };\n};\n\nconst signUpFailureAdmin = (error) =>{\n    return {\n        type: SIGN_UP_ADMIN_FAILURE,\n        payload:error\n    };\n};\n\nexport const signUpAdmin = (user,history) =>{\n    \n    return async function (dispatch)  {\n        dispatch(signUpRequestAdmin());\n        try{\n            const res = await axios({\n                method:\"post\",\n                url: URL_Admin+'/register',\n                data: user,\n                });\n                const {data} = res.data;\n               \n                dispatch(signUpSuccessAdmin(data));\n                history.push('/adminhome');\n        }catch(error){\n          \n               dispatch(signUpFailureAdmin(error));\n           \n        }\n    };\n};\n\n//Sign in  ADMIN\n\nconst signInRequestAdmin = () =>{\n    return {\n        type: SIGN_IN_ADMIN_REQUEST\n    };\n};\n\nconst signInSuccessAdmin = (payload) =>{\n    return {\n        type: SIGN_IN_ADMIN_SUCCESS,\n        payload\n    };\n};\n\nconst signInFailureAdmin = (error) =>{\n \n    return {\n        type: SIGN_IN_ADMIN_FAILURE,\n        payload: error,\n    };\n};\n\nexport const signinAdmin = (payload,history) =>{\n\n    return async function (dispatch) {\n    \n        dispatch(signInRequestAdmin);\n        try{\n    \n           const res= await axios({\n                method:\"POST\",\n                url: URL_Admin+\"/login\",\n                data:payload,\n                headers:{\n                    \"Content-type\":\"application/json\",\n                    \"Accept\":\"application/json\",\n                }\n            })           \n              \n            const {access_token,name} = res.data;\n\n            localStorage.setItem(\"ADMIN-NAME\",name);\n                localStorage.setItem(\"ADMIN-TOKEN\",access_token);\n                dispatch(signInSuccessAdmin({access_token,name}));\n        }catch(error){\n            if(error.response && error.response.status === 404){\n                dispatch(signInFailureAdmin(error.response.data));\n            \n           }\n           else{\n               dispatch(signUpFailureAdmin(error));\n           }\n           \n           \n        }\n        \n    };\n};\n\n// sign out ADMIN\n\nexport const signOutRequestAdmin = () =>{\n    return {\n        type: SIGN_OUT_ADMIN_REQUEST,\n    };\n};\n\nexport const signOutSuccessAdmin = () =>{\n    return {\n      type: SIGN_OUT_ADMIN_SUCCESS,\n    };\n  };\n\nexport const signOutFailureAdmin = () =>{\n    return {\n        type: SIGN_OUT_ADMIN_FAILURE\n    };\n};\n\nexport const signOutAdmin = (history) =>{\n\n    return async function(dispatch){\n        dispatch(signOutRequestAdmin());\n        try{\n        \n\n            const res= await axios({\n                 method:\"POST\",\n                 url: URL_Admin+\"/logout\",\n                 headers:{\n                     \"Content-type\":\"application/json\",\n                     \"Accept\":\"application/json\",\n                     \"Authorization\":`Bearer ${localStorage.getItem(\"ADMIN-TOKEN\")}`\n                 }\n             }) \n        localStorage.removeItem(\"ADMIN-TOKEN\");\n        localStorage.removeItem(\"ADMIN-NAME\");\n      history.push('/admin/signin');\n        toast.success(\"Logged out\");\n            }\n            catch(error){\n               \n\n                if(localStorage.getItem(\"ADMIN-TOKEN\")!== null){\n                    dispatch(signOutFailureAdmin());\n                }\n                else{\n                    dispatch(signOutSuccessAdmin());\n                }\n            }\n       \n    };\n}\n/////////////////////////USER///////////////////////////////////////////////////////////////////////////////////\n\n//////////////GET ALL RECEIVED ACCEPTED ORDER /////////////\n\nconst fetchAllRecievedAcceptedOrderUserRequest = () =>{\n    return{\n        type: GET_RECEIVED_ORDER_ACCEPTED_REQUEST_USER,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchAllRecievedAcceptedOrderUserSuccess = (receivedAcceptedOrderData) =>{\n    \n    return{\n        type: GET_RECEIVED_ORDER_ACCEPTED_SUCCESS_USER,\n        payload: {\n            receivedAcceptedOrderData\n        }\n    };\n};\n\nconst fetchAllRecievedAcceptedOrderUserFailure = (errorRecievedAcceptedOrder) =>{\n    return {\n        type: GET_RECEIVED_ORDER_ACCEPTED_FAILED_USER,\n        payload:errorRecievedAcceptedOrder\n    };\n};\n\nexport const fetchAllRecievedAcceptedOrderUser = () =>{\n       \n    return async function (dispatch) {\n        dispatch(fetchAllRecievedAcceptedOrderUserRequest());\n        try{\n            const res = await axios({\n                    method:\"get\",\n                    url: URL_User+'/getAllAcceptedOrder',\n                    headers:{\n                        \"Accept\":\"application/json\",\n                        Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n                    }\n                                   \n                });                \n                const result = res.data;    \n                let payload=[]\n\n            \n                result.data.map((res)=>{\n                   \n                    if(res.orders_accepted.length>0){\n                      \n                        res.orders_accepted.map((result2)=>  {\n                            payload=[...payload,{...result2,\n                                service:res,\n                            }]\n                     \n                    });\n                }});\n                console.log('AACCEPTED PAYLAD',payload)\n               \n              \n\n                // if(res.data.message===\"You must be logged in\"){  \n                //     dispatch(signOutUser())\n                // }\n                // else{\n                       \n                //     dispatch(fetchAllRecievedAcceptedOrderUserSuccess(payload));\n              \n                // }\n              \n               \n                       \n                \n        }catch(errorRecievedAcceptedOrder){\n           \n                dispatch(fetchAllRecievedAcceptedOrderUserFailure(errorRecievedAcceptedOrder.response.data));\n                \n        }\n    };\n};\n\n//////////////GET ALL RECEIVED  PENDING ORDER /////////////\n\nconst fetchAllRecievedPendingOrderUserRequest = () =>{\n    return{\n        type: GET_RECEIVED_ORDER_PENDING_REQUEST_USER,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchAllRecievedPendingOrderUserSuccess = (receivedPendingOrderData) =>{\n    \n    return{\n        type: GET_RECEIVED_ORDER_PENDING_SUCCESS_USER,\n        payload: {\n            receivedPendingOrderData\n        }\n    };\n};\n\nconst fetchAllRecievedPendingOrderUserFailure = (errorRecievedPendingOrder) =>{\n    return {\n        type: GET_RECEIVED_ORDER_PENDING_FAILED_USER,\n        payload:errorRecievedPendingOrder\n    };\n};\n\nexport const fetchAllRecievedPendingOrderUser = () =>{\n       \n    return async function (dispatch) {\n        dispatch(fetchAllRecievedPendingOrderUserRequest());\n        try{\n            const res = await axios({\n                    method:\"get\",\n                    url: URL_User+'/getAllPendingOrder',\n                    headers:{\n                        \"Accept\":\"application/json\",\n                        Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n                    }\n                                   \n                });                \n                const result = res.data;    \n                let payload=[]\n\n            \n                result.data.map((res)=>{\n                   \n                    if(res.orders_pending.length>0){\n                      \n                        res.orders_pending.map((result2)=>  {\n                            payload=[...payload,{...result2,\n                                service:res,\n                            }]\n                     \n                    });\n                }});\n\n               \n              \n\n                if(res.data.message===\"You must be logged in\"){  \n                    dispatch(signOutUser())\n                }\n                else{\n                       \n                    dispatch(fetchAllRecievedPendingOrderUserSuccess(payload));\n              \n                }\n              \n               \n                       \n                \n        }catch(errorRecievedPendingOrder){\n           \n                dispatch(fetchAllRecievedPendingOrderUserFailure(errorRecievedPendingOrder.response.data));\n                \n        }\n    };\n};\n\n///////////////GET ALL MY REJECTED ORDER /////////\n\nconst fetchAllMyRejectedOrderUserRequest = () =>{\n    return{\n        type: GET_MY_ORDER_REJECTED_REQUEST_USER,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchAllMyRejectedOrderUserSucces = (myRejectedOrderData) =>{\n    \n    return{\n        type: GET_MY_ORDER_REJECTED_SUCCESS_USER,\n        payload: {\n            myRejectedOrderData\n        }\n    };\n};\n\nconst fetchAllMyRejectedOrderUserFailure = (errorMyRejectedOrder) =>{\n    return {\n        type: GET_MY_ORDER_REJECTED_FAILED_USER,\n        payload:errorMyRejectedOrder\n    };\n};\n\nexport const fetchAllMyRejectedOrderUser = () =>{\n       \n    return async function (dispatch) {\n        dispatch(fetchAllMyRejectedOrderUserRequest());\n        try{\n            const res = await axios({\n                    method:\"get\",\n                    url: URL_User+'/myOrdersRejected',\n                    headers:{\n                        \"Accept\":\"application/json\",\n                        Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n                    }\n                                   \n                });                \n                const result = res.data;         \n                if(res.data.message===\"You must be logged in\"){  \n                    dispatch(signOutUser())\n                }\n                else{\n                       \n                    dispatch(fetchAllMyRejectedOrderUserSucces(result));\n              \n                }\n              \n               \n                       \n                \n        }catch(errorMyRejectedOrder){\n           \n                dispatch(fetchAllMyRejectedOrderUserFailure(errorMyRejectedOrder.response.data));\n                \n        }\n    };\n};\n\n\n///////////////GET ALL MY ACCEPTED ORDER ////////////////////\n\nconst fetchAllMyAcceptedOrderUserRequest = () =>{\n    return{\n        type: GET_MY_ORDER_ACCEPTED_REQUEST_USER,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchAllMyAcceptedOrderUserSucces = (myAcceptedOrderData) =>{\n    \n    return{\n        type: GET_MY_ORDER_ACCEPTED_SUCCESS_USER,\n        payload: {\n            myAcceptedOrderData\n        }\n    };\n};\n\nconst fetchAllMyAcceptedOrderUserFailure = (errorMyAcceptedOrder) =>{\n    return {\n        type: GET_MY_ORDER_ACCEPTED_FAILED_USER,\n        payload:errorMyAcceptedOrder\n    };\n};\n\nexport const fetchAllMyAcceptedOrderUser = () =>{\n       \n    return async function (dispatch) {\n        dispatch(fetchAllMyAcceptedOrderUserRequest());\n        try{\n            const res = await axios({\n                    method:\"get\",\n                    url: URL_User+'/myOrdersAccepted',\n                    headers:{\n                        \"Accept\":\"application/json\",\n                        Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n                    }\n                                   \n                });                \n                const result = res.data;         \n                if(res.data.message===\"You must be logged in\"){  \n                    dispatch(signOutUser())\n                }\n                else{\n                       \n                    dispatch(fetchAllMyAcceptedOrderUserSucces(result));\n              \n                }\n              \n               \n                       \n                \n        }catch(errorMyAcceptedOrder){\n           \n                dispatch(fetchAllMyAcceptedOrderUserFailure(errorMyAcceptedOrder.response.data));\n                \n        }\n    };\n};\n\n///////////////GET ALL MY PENDING ORDER /////////\n\nconst fetchAllMyPendingOrderUserRequest = () =>{\n    return{\n        type: GET_MY_ORDER_PENDING_REQUEST_USER,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchAllMyPendingOrderUserSucces = (myPendingOrderData) =>{\n    \n    return{\n        type: GET_MY_ORDER_PENDING_SUCCESS_USER,\n        payload: {\n            myPendingOrderData\n        }\n    };\n};\n\nconst fetchAllMyPendingOrderUserFailure = (errorMyPendingOrder) =>{\n    return {\n        type: GET_MY_ORDER_PENDING_FAILED_USER,\n        payload:errorMyPendingOrder\n    };\n};\n\nexport const fetchAllMyPendingOrderUser = () =>{\n       \n    return async function (dispatch) {\n        dispatch(fetchAllMyPendingOrderUserRequest());\n        try{\n            const res = await axios({\n                    method:\"get\",\n                    url: URL_User+'/myOrdersPending',\n                    headers:{\n                        \"Accept\":\"application/json\",\n                        Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n                    }\n                                   \n                });                \n                const result = res.data;         \n                if(res.data.message===\"You must be logged in\"){  \n                    dispatch(signOutUser())\n                }\n                else{\n                       \n                    dispatch(fetchAllMyPendingOrderUserSucces(result));\n              \n                }\n              \n               \n                       \n                \n        }catch(errorMyPendingOrder){\n           \n                dispatch(fetchAllMyPendingOrderUserFailure(errorMyPendingOrder.response.data));\n                \n        }\n    };\n};\n\n////////////POST ORDER /////////\nconst postOrderUserRequest = () =>{\n   \n    return{\n        type: POST_ORDER_REQUEST_USER,\n    };\n};\n\nconst postOrderUserSuccess = (postOrderData) =>{\n    console.log('postOrderData',postOrderData)\n    return{\n        type: POST_ORDER_SUCCESS_USER,\n        payload: {\n            postOrderData\n        }\n    };\n};\n\nconst postOrderUserFailure = (postOrderError) =>{\n   \n    return {\n        type: POST_ORDER_FAILED_USER,\n        payload:postOrderError\n    };\n};\n\nexport const postOrder =  (OrderData) =>{\n \n    return async function (dispatch) {\n\n        dispatch(postOrderUserRequest());\n    try{\n       const response = await axios.post(URL_User+`/createOrder`,OrderData,\n           {\n            headers:{\n                \"Accept\":\"application/json\",\n                Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n            }\n        }\n           \n        );\n        const datas = response.data;\n        console.log('response',response.data)\n        if(response && response.data && response.data.message && response.data.message===\"You must be logged in\"){  \n            dispatch(signOutUser())\n        }\n        else{\n               \n        dispatch(postOrderUserSuccess(datas));\n        toast.success('Your Order Has Been Sent Check your messages with your provider');\n        }\n                        \n    }catch(postOrderError){\n       console.log('postOrderError',postOrderError.response.data)\n        dispatch(postOrderUserFailure(postOrderError.response.data));\n    }\n     \n    };\n};\n\n\n///////CREATE SERVICE\n\nconst createServiceRequest = () =>{\n   \n    return{\n        type: POST_CREATE_SERVICE_REQUEST_USER,\n    };\n};\n\nconst createServiceSuccess = (postService) =>{\n    return{\n        type: POST_CREATE_SERVICE_SUCCESS_USER,\n        payload: {\n            postService\n        }\n    };\n};\n\nconst createServiceFailure = (createServiceError) =>{\n   \n    return {\n        type: POST_CREATE_SERVICE_FAILED_USER,\n        payload:createServiceError\n    };\n};\n\nexport const createService =  (postService) =>{\n \n    return async function (dispatch) {\n\n        dispatch(createServiceRequest());\n    try{\n       const response = await axios.post(URL_User+`/services`,postService,\n           {\n            headers:{\n                \"Accept\":\"application/json\",\n                Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n            }\n        }\n           \n        );\n        const data = response.data;\n        console.log(data)\n        if(response.data.message===\"You must be logged in\"){  \n            dispatch(signOutUser())\n        }\n        else{\n               \n        dispatch(createServiceSuccess(data));\n        toast.success(data.message)\n        }\n                        \n    }catch(createServiceError){\n       \n        dispatch(createServiceFailure(createServiceError.response.data));\n    }\n     \n    };\n};\n\n//// FETCH SUBCATEGORY BY CATEGORY_ID //////////////\n\nexport const  emptySubcategory = ()=>{\n    return {\n        type:EMPTY_SUBCATEGORY,\n    }\n}\n\nconst fectchSubcategoryByCategoryIDRequest = () =>{\n    console.log('test')\n    return{\n        type: GET_SUBCATEGORY_BY_CATEGORY_ID_REQUEST_USER,\n    };\n};\n\nconst fectchSubcategoryByCategoryIDSuccess = (fetchSubCategoryDataUser) =>{\n    return{\n        type: GET_SUBCATEGORY_BY_CATEGORY_ID_SUCCESS_USER,\n        payload: {\n            fetchSubCategoryDataUser\n        }\n    };\n};\n\nconst fectchSubcategoryByCategoryIDFailure = (fetchSubCategoryDataUsererror) =>{\n   \n    return {\n        type: GET_SUBCATEGORY_BY_CATEGORY_ID_FAILED_USER,\n        payload:fetchSubCategoryDataUsererror\n    };\n};\n\nexport const fetchSubcategoryByCategoryID =  (category_id) =>{\n    console.log(\"fetchSubcategoryByCategoryID\",category_id);\n    return async function (dispatch) {\n\n        dispatch(fectchSubcategoryByCategoryIDRequest());\n    try{\n       const response = await axios({\n            method:\"get\",\n            url: URL_User+`/getSubcategoryByCategoryId/${category_id}`,\n            headers:{\n                \"Content-type\":\"application/json\",\n                \"Accept\":\"application/json\",\n                Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n            }\n        });\n\n        const data = response.data;\n        if(response.data.message===\"You must be logged in\"){  \n            dispatch(signOutUser())\n        }\n        else{\n               \n        dispatch(fectchSubcategoryByCategoryIDSuccess(data));\n        }\n                        \n    }catch(fetchSubCategoryDataUsererror){\n     \n        dispatch(fectchSubcategoryByCategoryIDFailure(fetchSubCategoryDataUsererror));\n    }\n     \n    };\n};\n\n////// FETCH ALL CATEGORY //////\nconst fetchAllCategoryRequestUser = () =>{\n    return{\n        type: GET_ALL_CATEGORY_REQUEST_USER,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchAllCategorySuccessUser = (categoryUserDataUser) =>{\n    \n    return{\n        type: GET_ALL_CATEGORY_SUCCESS_USER,\n        payload: {\n            categoryUserDataUser\n        }\n    };\n};\n\nconst fetchAllCategoryFaillureUser = (errorCategoryUser) =>{\n   \n    return {\n        type: GET_ALL_CATEGORY_FAILED_USER,\n        payload:errorCategoryUser\n    };\n};\n\nexport const fetchAllCategoryUser = (payload) =>{\n    \n    return async function (dispatch) {\n        dispatch(fetchAllCategoryRequestUser());\n        try{\n            const res = await axios({\n                    method:\"get\",\n                    url: URL_User+'/getAllCategory',\n                    data: payload,\n                    headers:{\n                     Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n                     }\n                });\n              \n               if(res.data.message===\"You must be logged in\"){  \n                   dispatch(signOutUser())\n               }\n               else{\n                  \n                const result = res.data.category; \n            \n                dispatch(fetchAllCategorySuccessUser(result));\n               }\n                \n        }catch(errorCategoryUser){\n          \n                dispatch(fetchAllCategoryFaillureUser(errorCategoryUser.response.data));\n              \n        }\n    };\n};\n\n\n////// FETCH ALL ACCEPTED CATEGORY //////\nconst fetchAllAcceptedCategoryRequest = () =>{\n    return{\n        type: GET_ALL_CATEGORY_ACCEPTED_REQUEST_USER,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchAllAcceptedCategorySuccess = (acceptedCategoryUserDataUser) =>{\n \n    return{\n        type: GET_ALL_CATEGORY_ACCEPTED_SUCCESS_USER,\n        payload: {\n            acceptedCategoryUserDataUser\n        }\n    };\n};\n\nconst fetchAllAcceptedCategoryFaillure = (errorAcceptedCategoryUser) =>{\n   \n    return {\n        type: GET_ALL_CATEGORY_ACCEPTED_FAILED_USER,\n        payload:errorAcceptedCategoryUser\n    };\n};\n\nexport const fetchAcceptedCategoryUser = (payload) =>{\n    \n    return async function (dispatch) {\n        dispatch(fetchAllAcceptedCategoryRequest());\n        try{\n            const res = await axios({\n                    method:\"get\",\n                    url: URL_User+'/getAllAcceptedCategory',\n                    data: payload,\n                    headers:{\n                     Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n                     }\n                });\n            \n               if(res.data.message===\"You must be logged in\"){  \n                   dispatch(signOutUser())\n               }\n               else{\n                  \n                const result = res.data.data; \n                \n                dispatch(fetchAllAcceptedCategorySuccess(result));\n               }\n                \n        }catch(errorAcceptedCategoryUser){\n          \n                dispatch(fetchAllAcceptedCategoryFaillure(errorAcceptedCategoryUser.response.data));\n              \n        }\n    };\n};\n/////////////////FETCH ALL ROOMS////////////\n\nconst fetchAllRoomsRequestUser = () =>{\n    return{\n        type: GET_ROOMS_REQUEST_USER,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchAllRoomsSuccessUser = (roomsUserData) =>{\n    \n    return{\n        type: GET_ROOMS_SUCCESS_USER,\n        payload: {\n            roomsUserData\n        }\n    };\n};\n\nconst fetchAllRoomsFaillureUser = (errorRooms) =>{\n   \n    return {\n        type: GET_ROOMS_FAILED_USER,\n        payload:errorRooms\n    };\n};\n\nexport const fetchAllRoomsUser = (payload) =>{\n    \n    return async function (dispatch) {\n        dispatch(fetchAllRoomsRequestUser());\n        try{\n            const res = await axios({\n                    method:\"get\",\n                    url: URL_User+'/getAllRooms',\n                    data: payload,\n                    headers:{\n                     Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n                     }\n                });\n              \n               if(res.data.message===\"You must be logged in\"){  \n                   dispatch(signOutUser())\n               }\n               else{\n                  \n                const result = res.data; \n            \n                dispatch(fetchAllRoomsSuccessUser(result));\n               }\n                \n        }catch(errorRooms){\n          \n                dispatch(fetchAllRoomsFaillureUser(errorRooms.response.data));\n              \n        }\n    };\n};\n\n//// /////////////CONTACT  SELLER //////////////\n\n\nconst contactSellerRequest = () =>{\n   \n    return{\n        type: CONTACT_SELLER_REQUEST_USER,\n    };\n};\n\nconst contactSellerSuccess = (contactData) =>{\n    return{\n        type: CONTACT_SELLER_SUCCESS_USER,\n        payload: {\n            contactData\n        }\n    };\n};\n\nconst contactSellerFailure = (contactError) =>{\n   \n    return {\n        type: CONTACT_SELLER_FAILED_USER,\n        payload:contactError\n    };\n};\n\nexport const contactSeller =  (contactData) =>{\n \n    return async function (dispatch) {\n\n        dispatch(contactSellerRequest());\n    try{\n       const response = await axios.post(URL_User+`/contactSeller`,contactData,\n           {\n            headers:{\n                \"Accept\":\"application/json\",\n                Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n            }\n        }\n           \n        );\n        const data = response.data;\n       \n        if(response.data.message===\"You must be logged in\"){  \n            dispatch(signOutUser())\n        }\n        else{\n               \n        dispatch(contactSellerSuccess(data));\n        toast.success('Message Sent')\n        }\n                        \n    }catch(contactError){\n       \n        dispatch(contactSellerFailure(contactError.response.data));\n    }\n     \n    };\n};\n\n\n// SIGN UP USER\n\nconst signUpRequestUser = () =>{\n    return{\n        type: SIGN_UP_USER_REQUEST,\n    };\n};\n\nconst signUpSuccessUser = (user) =>{\n    return{\n        type: SIGN_UP_USER_SUCCESS,\n        payload: {\n            user\n        }\n    };\n};\n\nconst signUpFailureUser = (error) =>{\n\n    return {\n        type: SIGN_UP_USER_FAILURE,\n        payload:error.errors\n    };\n};\n\nexport const signUpUser = (user,history) =>{\n    \n    return async function (dispatch)  {\n        dispatch(signUpRequestUser());\n        try{\n            const res = await axios({\n                method:\"post\",\n                url: URL_User+'/register',\n                data: user,\n                });\n                const {data} = res.data;\n               \n                if(res.data.success ===false && res.status ===200 && res.data.errors){\n                    dispatch(signUpSuccessUser(res.data.erros));\n                    toast.success('Succefully Registered');\n               }\n               else{\n                   dispatch(signUpFailureUser(data));\n               }\n\n            //    console.log(res);\n            //     dispatch(signUpSuccessUser(data));\n                // history.push('/');\n        }catch(error){\n                   \n            if(error.response && error.response.status ===400){\n                dispatch(signUpFailureUser(error.response.data));\n            \n           }\n           else{\n               dispatch(signUpFailureUser(error));\n           }\n\n            \n             \n           \n        }\n    };\n};\n\n//Sign in  USER\n\nconst signInRequestUser = () =>{\n    return {\n        type: SIGN_IN_USER_REQUEST\n    };\n};\n\nconst signInSuccessUser = (payload) =>{\n    return {\n        type: SIGN_IN_USER_SUCCESS,\n        payload\n    };\n};\n\nconst signInFailureUser = (error) =>{\n \n    return {\n        type: SIGN_IN_USER_FAILURE,\n        payload: error,\n    };\n};\n\nexport const signinUser = (payload,history) =>{\n\n    return async function (dispatch) {\n    \n        dispatch(signInRequestUser);\n        try{\n    \n           const res= await axios({\n                method:\"POST\",\n                url: URL_User+\"/login\",\n                data:payload,\n                headers:{\n                    \"Content-type\":\"application/json\",\n                    \"Accept\":\"application/json\",\n                }\n            })           \n             \n            const {access_token,id, user_name:{name} } = res.data;\n\n              \n                localStorage.setItem(\"USER-TOKEN\",access_token);\n                // localStorage.setItem(\"USER-EMAIL\",email);\n                localStorage.setItem(\"USER-ID\",id);\n                localStorage.setItem(\"USER-NAME\",name);\n                dispatch(signInSuccessUser({access_token,id,name}));\n                toast.success('Succefully Logged in');\n        }catch(error){\n            if(error.response && error.response.status === 404){\n                dispatch(signInFailureUser(error.response.data));\n            \n           }\n           else{\n               dispatch(signUpFailureUser(error));\n           }\n           \n           \n        }\n        \n    };\n};\n\n// sign out USER\n\nexport const signOutRequestUser = () =>{\n    return {\n        type: SIGN_OUT_USER_REQUEST,\n    };\n};\n\nexport const signOutSuccessUser = () =>{\n    return {\n      type: SIGN_OUT_USER_SUCCESS,\n    };\n  };\n\nexport const signOutFailureUser = () =>{\n    return {\n        type: SIGN_OUT_USER_FAILURE\n    };\n};\n\nexport const signOutUser = () =>{\n    return async function(dispatch){\n        dispatch(signOutRequestUser());\n        try{\n    \n            const res= await axios({\n                 method:\"POST\",\n                 url: URL_User+\"/logout\",\n                 headers:{\n                     \"Content-type\":\"application/json\",\n                     \"Accept\":\"application/json\",\n                 }\n             }) \n        localStorage.removeItem(\"USER-TOKEN\");\n        // localStorage.removeItem(\"USER-EMAIL\");\n        localStorage.removeItem(\"USER-ID\");\n        localStorage.removeItem(\"USER-NAME\");\n        toast.success('Logged out');\n            }\n            catch(error){\n                if(localStorage.getItem(\"USER-TOKEN\")!== null){\n                    dispatch(signOutFailureUser());\n                }\n                else{\n                    dispatch(signOutSuccessUser());\n                }\n            }\n       \n    };\n}\n\n\n///////////////////////////////////////GUEST /////////////////////////////\n\n/////// FETCH ALL SUBCATEGORY CATEGORY AND SERVICES //////////////////////////////\n\nconst fetchAllDataGuestRequest = () =>{\n    return{\n        type: GET_ALL_SUCATEGORY_CATEGORY_SERVICE_REQUEST_GUEST,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchAllDataGuestSuccess = (guestData) =>{\n    \n    return{\n        type: GET_ALL_SUCATEGORY_CATEGORY_SERVICE_SUCCESS_GUEST,\n        payload: {\n            guestData\n        }\n    };\n};\n\nconst fetchAllDataGuestFailure = (errorDataGuest) =>{\n    return {\n        type: GET_ALL_SUCATEGORY_CATEGORY_SERVICE_FAILED_GUEST,\n        payload:errorDataGuest\n    };\n};\n\nexport const fetchAllDataGuest = (payload) =>{\n       \n    return async function (dispatch) {\n        dispatch(fetchAllDataGuestRequest());\n        try{\n            const res = await axios({\n                    method:\"get\",\n                    url: URL_Guest+'/categories',\n                  \n                   \n                });\n           \n                  \n                const result = res.data;\n                let payload=[];\n\n                ///////////CAT AND SUB AND SERVICES/////////\n                // result.map((cat)=>{\n                  \n                //     if(cat.length!==0 && cat.subcategories_accepted.length>0 ){\n                //         console.log(cat)\n                //       payload.push(cat);\n                //     }\n                // })\n                ///////////CAT AND SUB AND SERVICES/////////\n\n\n                //////////HOLY CODE /////////////////////////////HOLY CODE /////////////////////////////HOLY CODE /////////////////////////////HOLY CODE ///////////////////\n                //  result.map((res)=>{\n                       \n                //     if(res.subcategories_accepted.length>0){\n                     \n                //           res.subcategories_accepted.map((result)=>  {\n                         \n                //              if(result.services_accepted.length>0){\n                                   \n                //                       payload=[...payload,  \n                //                         ...result.services_accepted,\n                                     \n\n                //                     ];\n                            \n                //           }\n                //     });\n                // }});\n                //////////HOLY CODE /////////////////////////////HOLY CODE /////////////////////////////HOLY CODE ///////////////////\n\n         \n                // result.map((res)=>{\n                       \n                //     if(res.subcategories_accepted.length>0){\n                     \n                //           res.subcategories_accepted.map((result)=>  {\n                         \n                //              if(result.services_accepted.length>0){\n                                   \n                //                       payload=[...payload,  ...result.services_accepted];\n                            \n                //           }\n                //     });\n                // }});\n                ///////////////// SERVICES ONLY ///////\n/////////you get sub and services//////////////\n               \n                result.map((res)=>{\n                \n                   if(res.subcategories_accepted.length>0){\n                         res.subcategories_accepted.map((result)=>  {\n                        \n                            if(result.services_accepted.length>0){\n                                  result.services_accepted.map((value)=>{\n                                    payload=[...payload, { ...value,\n                                        subcategory:result,\n                                        category:res\n                                    }];\n\n                                  })\n                         }\n                   });\n               }});\n/////////you get sub and services//////////////\n                \n                console.log('payload',payload)\n              \n                dispatch({type:ACCEPTED_SERVICES,payload})\n                dispatch(fetchAllDataGuestSuccess(result));\n                // dispatch(fetchAllAcceptedServicesFailure(\"\")); \n           \n                \n        }catch(errorDataGuest){\n           \n                dispatch(fetchAllDataGuestFailure(errorDataGuest.response.data));\n                \n        }\n    };\n};\n\n/////////////////FETCH ILLUSTRATOR GUEST ////////////////\n\nconst fetchIlllustratorGuestRequest = () =>{\n    return{\n        type: GET_ALL_SUB_ILLUSTRATOR_SERVICE_REQUEST_GUEST,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchIlllustratorGuestSuccess = (guestIllustratorData) =>{\n    \n    return{\n        type: GET_ALL_SUB_ILLUSTRATOR_SERVICE_SUCCESS_GUEST,\n        payload: {\n            guestIllustratorData\n        }\n    };\n};\n\nconst fetchIlllustratorGuestFailure = (errorIllustratorDataGuest) =>{\n    return {\n        type: GET_ALL_SUB_ILLUSTRATOR_SERVICE_FAILED_GUEST,\n        payload:errorIllustratorDataGuest\n    };\n};\n\nexport const fetchIllustratorDataGuest = (payload) =>{\n       \n    return async function (dispatch) {\n        dispatch(fetchIlllustratorGuestRequest());\n        try{\n            const res = await axios({\n                    method:\"get\",\n                    url: URL_Guest+'/paginateServiceSubcategory',\n                                   \n                });                \n                const result = res.data;         \n                \n              \n                dispatch(fetchIlllustratorGuestSuccess(result));\n                       \n                \n        }catch(errorDataGuest){\n           \n                dispatch(fetchIlllustratorGuestFailure(errorDataGuest.response.data));\n                \n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}