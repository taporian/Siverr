{"ast":null,"code":"import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport { authenticationReducer, fetchAllPendingServiceReducer, fetchAllAcceptedServiceReducer, fetchAllRejectedServiceReducer, toggleScreensReducer, fetchAllAcceptedCategoryUserReducer, fetchAllCategoryUserReducer, fetchAllSubCategoryByCategoryIDUserReducer, createServiceReducer, acceptServiceAdminReducer, rejectServiceAdminReducer, fetchAllDataGuestReducer, fetchIllustratorDataGuestReducer, fetchAllRoomsUserReducer, contactSellerReducer, postOrderReducer, fetchAllMyPendingOrderUserReducer, fetchAllMyAcceptedOrderUserReducer } from \"./reducer\";\n\nconst createRootReducer = () => combineReducers({\n  authenticationReducer,\n  fetchAllPendingServiceReducer,\n  fetchAllAcceptedServiceReducer,\n  fetchAllRejectedServiceReducer,\n  toggleScreensReducer,\n  fetchAllAcceptedCategoryUserReducer,\n  fetchAllCategoryUserReducer,\n  fetchAllSubCategoryByCategoryIDUserReducer,\n  createServiceReducer,\n  acceptServiceAdminReducer,\n  rejectServiceAdminReducer,\n  fetchAllDataGuestReducer,\n  fetchIllustratorDataGuestReducer,\n  fetchAllRoomsUserReducer,\n  contactSellerReducer,\n  postOrderReducer,\n  fetchAllMyPendingOrderUserReducer,\n  fetchAllMyAcceptedOrderUserReducer\n});\n\nconst initState = {\n  authenticationReducer: {\n    currentAdmin: null,\n    access_token: \"\",\n    error: \"\",\n    loading: false,\n    isAuthenticated: false\n  },\n  fetchAllPendingServiceReducer: {\n    error: \"\",\n    loading: false,\n    pendingServiceData: []\n  },\n  fetchAllAcceptedServiceReducer: {\n    errorAccepted: \"\",\n    loading: false,\n    acceptedServiceData: []\n  },\n  fetchAllRejectedServiceReducer: {\n    error: \"\",\n    loading: false,\n    rejectedServiceData: []\n  },\n  fetchAllAcceptedCategoryUserReducer: {\n    errorAcceptedCategoryUser: \"\",\n    loading: false,\n    acceptedCategoryUserDataUser: []\n  },\n  fetchAllCategoryUserReducer: {\n    errorCategoryUser: \"\",\n    loading: false,\n    categoryUserDataUser: []\n  },\n  fetchAllSubCategoryByCategoryIDUserReducer: {\n    fetchSubCategoryDataUsererror: \"\",\n    loading: false,\n    fetchSubCategoryDataUser: []\n  },\n  createServiceReducer: {\n    createServiceError: \"\",\n    loading: false,\n    postService: []\n  },\n  acceptServiceAdminReducer: {\n    acceptedServiceDataError: \"\",\n    loading: false,\n    acceptedServiceAdminData: []\n  },\n  rejectServiceAdminReducer: {\n    rejectServiceDataError: \"\",\n    loading: false,\n    rejectServiceAdminData: []\n  },\n  fetchAllDataGuestReducer: {\n    errorDataGuest: \"\",\n    loading: false,\n    guestData: []\n  },\n  fetchIllustratorDataGuestReducer: {\n    errorIllustratorDataGuest: \"\",\n    guestIllustratorData: [],\n    loading: false\n  },\n  fetchAllRoomsUserReducer: {\n    roomsUserData: [],\n    loading: false,\n    errorRooms: \"\"\n  },\n  contactSellerReducer: {\n    loading: false,\n    contactData: [],\n    contactError: \"\"\n  },\n  postOrderReducer: {\n    loading: false,\n    postOrderData: [],\n    postOrderError: \"\"\n  },\n  fetchAllMyPendingOrderUserReducer: {\n    loading: false,\n    myPendingOrderData: [],\n    errorMyPendingOrder: \"\"\n  },\n  fetchAllMyAcceptedOrderUserReducer: {\n    loading: false,\n    myAcceptedOrderData: [],\n    errorMyAcceptedOrder: \"\"\n  }\n};\nexport default function makeStore() {\n  let initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let composeEnhancers = compose;\n  const middlewares = [thunk];\n\n  if (process.env.NODE_ENV === \"development\") {\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n    }\n  }\n\n  const store = createStore(createRootReducer(), initialState, composeEnhancers(applyMiddleware(...middlewares)));\n\n  if (module.hot) {\n    module.hot.accept(\"./reducer\", () => {\n      const nextReducer = require(\"./reducer\").default;\n\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/Users/chrishar/Documents/CODI/Final project/Siverr/frontend/src/redux/store.js"],"names":["applyMiddleware","createStore","compose","thunk","combineReducers","authenticationReducer","fetchAllPendingServiceReducer","fetchAllAcceptedServiceReducer","fetchAllRejectedServiceReducer","toggleScreensReducer","fetchAllAcceptedCategoryUserReducer","fetchAllCategoryUserReducer","fetchAllSubCategoryByCategoryIDUserReducer","createServiceReducer","acceptServiceAdminReducer","rejectServiceAdminReducer","fetchAllDataGuestReducer","fetchIllustratorDataGuestReducer","fetchAllRoomsUserReducer","contactSellerReducer","postOrderReducer","fetchAllMyPendingOrderUserReducer","fetchAllMyAcceptedOrderUserReducer","createRootReducer","initState","currentAdmin","access_token","error","loading","isAuthenticated","pendingServiceData","errorAccepted","acceptedServiceData","rejectedServiceData","errorAcceptedCategoryUser","acceptedCategoryUserDataUser","errorCategoryUser","categoryUserDataUser","fetchSubCategoryDataUsererror","fetchSubCategoryDataUser","createServiceError","postService","acceptedServiceDataError","acceptedServiceAdminData","rejectServiceDataError","rejectServiceAdminData","errorDataGuest","guestData","errorIllustratorDataGuest","guestIllustratorData","roomsUserData","errorRooms","contactData","contactError","postOrderData","postOrderError","myPendingOrderData","errorMyPendingOrder","myAcceptedOrderData","errorMyAcceptedOrder","makeStore","initialState","composeEnhancers","middlewares","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","module","hot","accept","nextReducer","require","default","replaceReducer"],"mappings":"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","sourcesContent":["import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\n\nimport {authenticationReducer, \n  fetchAllPendingServiceReducer,\n  fetchAllAcceptedServiceReducer,\n  fetchAllRejectedServiceReducer,\n  toggleScreensReducer,\n  fetchAllAcceptedCategoryUserReducer,\n  fetchAllCategoryUserReducer,\n  fetchAllSubCategoryByCategoryIDUserReducer,\n  createServiceReducer,\n  acceptServiceAdminReducer,\n  rejectServiceAdminReducer,\n  fetchAllDataGuestReducer,\n  fetchIllustratorDataGuestReducer,\n  fetchAllRoomsUserReducer,\n  contactSellerReducer,\n  postOrderReducer,\n  fetchAllMyPendingOrderUserReducer,\n  fetchAllMyAcceptedOrderUserReducer,\n} from \"./reducer\";\n\nconst createRootReducer = () =>\ncombineReducers({\n  authenticationReducer,\n  fetchAllPendingServiceReducer,\n  fetchAllAcceptedServiceReducer,\n  fetchAllRejectedServiceReducer,\n  toggleScreensReducer,\n  fetchAllAcceptedCategoryUserReducer,\n  fetchAllCategoryUserReducer,\n  fetchAllSubCategoryByCategoryIDUserReducer,\n  createServiceReducer,\n  acceptServiceAdminReducer,\n  rejectServiceAdminReducer,\n  fetchAllDataGuestReducer,\n  fetchIllustratorDataGuestReducer,\n  fetchAllRoomsUserReducer,\n  contactSellerReducer,\n  postOrderReducer,\n  fetchAllMyPendingOrderUserReducer,\n  fetchAllMyAcceptedOrderUserReducer,\n});\n\nconst initState = {\n    authenticationReducer: {\n        currentAdmin: null,\n      access_token: \"\",\n      error: \"\",\n      loading: false,\n      isAuthenticated: false,\n     \n    },\n    fetchAllPendingServiceReducer:{\n      error:\"\",\n      loading: false,\n      pendingServiceData:[],\n    \n    },\n    fetchAllAcceptedServiceReducer:{\n      errorAccepted:\"\",\n      loading: false,\n      acceptedServiceData:[],\n    },\n    fetchAllRejectedServiceReducer:{\n      error:\"\",\n      loading: false,\n      rejectedServiceData:[],\n    },\n    fetchAllAcceptedCategoryUserReducer:{\n      errorAcceptedCategoryUser:\"\",\n      loading: false,\n      acceptedCategoryUserDataUser:[],\n    },\n    fetchAllCategoryUserReducer:{\n      errorCategoryUser:\"\", \n      loading: false,\n      categoryUserDataUser:[],\n    },\n    fetchAllSubCategoryByCategoryIDUserReducer:{\n      fetchSubCategoryDataUsererror:\"\",\n      loading: false,\n      fetchSubCategoryDataUser:[],\n    },\n    createServiceReducer:{\n      createServiceError:\"\",\n      loading:false,\n      postService:[],\n    },\n    acceptServiceAdminReducer:{\n      acceptedServiceDataError:\"\",\n      loading:false,\n    acceptedServiceAdminData:[],\n    },\n    rejectServiceAdminReducer:{\n      rejectServiceDataError:\"\",\n      loading:false,\n    rejectServiceAdminData:[],\n\n    },\n    fetchAllDataGuestReducer:{\n      errorDataGuest:\"\",\n      loading:false,\n      guestData:[],\n    },\n    fetchIllustratorDataGuestReducer:{\n      errorIllustratorDataGuest:\"\",\n      guestIllustratorData:[],\n      loading:false,\n\n    },\n    fetchAllRoomsUserReducer:{\n      roomsUserData:[],\n      loading:false,\n      errorRooms:\"\",\n\n    },\n    contactSellerReducer:{\n      loading:false,\n      contactData:[],\n      contactError:\"\",\n    },\n    postOrderReducer:{\n      loading:false,\n      postOrderData:[],\n      postOrderError:\"\",\n    },\n    fetchAllMyPendingOrderUserReducer:\n    {\n      loading:false,\n      myPendingOrderData:[],\n      errorMyPendingOrder:\"\",\n    },\n    fetchAllMyAcceptedOrderUserReducer:\n    {\n      loading:false,\n      myAcceptedOrderData:[],\n      errorMyAcceptedOrder:\"\",\n    }\n\n  \n    \n  \n  \n  }\n\n\nexport default function makeStore(initialState = initState) {\n    let composeEnhancers = compose;\n    const middlewares = [thunk];\n  \n    if (process.env.NODE_ENV === \"development\") {\n      if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n        composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n      }\n    }\n    const store = createStore(\n      createRootReducer(),\n      initialState,\n      composeEnhancers(applyMiddleware(...middlewares))\n    );\n  \n    if (module.hot) {\n      module.hot.accept(\"./reducer\", () => {\n        const nextReducer = require(\"./reducer\").default;\n        store.replaceReducer(nextReducer);\n      });\n    }\n    return store;\n  }"]},"metadata":{},"sourceType":"module"}