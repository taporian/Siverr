{"ast":null,"code":"var _jsxFileName = \"/Users/chrishar/Documents/CODI/Final Project/Siverr/frontend/src/components/chats/Chat3.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PusherJs from 'pusher-js';\nimport { TextareaForm, InputFormSub } from '../styled/Login.styled';\nimport { URL_User } from '../URL';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat3() {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [room, setRoom] = useState(0);\n  useEffect(() => {\n    async function Load() {\n      const pusher = new PusherJs(\"7a885669ff1c6332e7bc\", {\n        cluster: \"eu\"\n      });\n      const formData = new FormData();\n      formData.append(\"room_id\", 1);\n      const response = await fetch(URL_User + \"/getmsg\", {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        },\n        method: \"post\",\n        body: formData\n      });\n      const result = await response.json();\n      console.log(result.messages); // // setMessages(result.messages);\n      // console.log(result);\n      // let arr = [];\n      // result.map((res) => {\n      //     arr.push({\n      //         userid: res.room_member.user.id,\n      //         username: res.room_member.user.name,\n      //         message: res.message,\n      //         messageid: res.id,\n      //     });\n      // });\n      // setMessages((prev) => [...prev, arr]);\n\n      const channel = pusher.subscribe(\"Chat\" + 1);\n      channel.bind(\"App\\\\Events\\\\NewMessage\", function (data) {\n        console.log(data);\n        setMessages(prev => [...prev, {}]);\n      });\n      return () => {\n        pusher.unsubscribe(\"Chat\" + 1);\n      };\n    }\n\n    Load();\n  }, []);\n\n  const sendMsg = async () => {\n    const formData = new FormData();\n    formData.append(\"messages\", message);\n    formData.append(\"room_id\", 1);\n    const response = await fetch(URL_User + \"/postmessages\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n      },\n      method: \"post\",\n      body: formData\n    });\n    const result = await response.json();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        sendMsg();\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextareaForm, {\n        onChange: event => {\n          setMessage(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(InputFormSub, {\n        type: \"submit\",\n        value: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Chat3, \"8h3ebYAEKRYrN1beHzd8HIqDSZ8=\");\n\n_c = Chat3;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat3\");","map":{"version":3,"sources":["/Users/chrishar/Documents/CODI/Final Project/Siverr/frontend/src/components/chats/Chat3.js"],"names":["React","useEffect","useState","PusherJs","TextareaForm","InputFormSub","URL_User","Chat3","messages","setMessages","message","setMessage","room","setRoom","Load","pusher","cluster","formData","FormData","append","response","fetch","headers","Authorization","localStorage","getItem","method","body","result","json","console","log","channel","subscribe","bind","data","prev","unsubscribe","sendMsg","event","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport PusherJs from 'pusher-js';\nimport { TextareaForm,InputFormSub } from '../styled/Login.styled';\nimport { URL_User } from '../URL';\nexport default function Chat3() {\n\n\nconst [messages, setMessages] = useState([]);\nconst [message, setMessage] = useState(\"\");\nconst [room, setRoom] = useState(0);\n\n    useEffect( () => {\n        async function Load(){\n\n        \n        \n        const pusher = new PusherJs(\"7a885669ff1c6332e7bc\", {\n            cluster: \"eu\",\n        });\n        \n            const formData = new FormData();\n            formData.append(\"room_id\",1);\n    \n            const response = await fetch(URL_User+\"/getmsg\",\n                {\n                    headers: {\n                        Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n                    },\n                    method: \"post\",\n                    body: formData,\n                }\n            );\n            const result = await response.json();\n            console.log(result.messages);\n            // // setMessages(result.messages);\n            // console.log(result);\n            // let arr = [];\n            // result.map((res) => {\n            //     arr.push({\n            //         userid: res.room_member.user.id,\n            //         username: res.room_member.user.name,\n            //         message: res.message,\n            //         messageid: res.id,\n            //     });\n            // });\n            // setMessages((prev) => [...prev, arr]);\n    \n        \n            const channel = pusher.subscribe(\"Chat\" + 1);\n            channel.bind(\"App\\\\Events\\\\NewMessage\", function (data) {\n                console.log(data);\n                setMessages((prev) => [...prev, {}]);\n                \n            });\n            return () => {\n                pusher.unsubscribe(\"Chat\" + 1);\n            };\n        }\n        Load();\n           \n        \n    }, []);\n\n\n    const sendMsg = async () => {\n        const formData = new FormData();\n        formData.append(\"messages\", message);\n        formData.append(\"room_id\", 1);\n\n        const response = await fetch(URL_User+\"/postmessages\", {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`,\n            },\n            method: \"post\",\n            body: formData,\n        }\n        \n        );\n        const result = await response.json();\n   \n    };\n \n\n    return (\n       <div>\n           \n           <form onSubmit={(event)=>{event.preventDefault();sendMsg()}} >\n              \n               {/* <div>{sendMsg}</div> */}\n             <TextareaForm onChange={(event)=>{setMessage(event.target.value)}}></TextareaForm>\n             <InputFormSub  type='submit' value='Chat'/>\n             </form>\n       </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}