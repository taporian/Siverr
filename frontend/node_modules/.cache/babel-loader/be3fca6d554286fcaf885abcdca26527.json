{"ast":null,"code":"var _jsxFileName = \"/Users/chrishar/Documents/CODI/Final Project/Siverr/frontend/src/components/chats/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport PusherJs from 'pusher-js';\nimport { URL_User } from '../URL';\nimport { signOutUser } from '../../redux/action-creators';\nimport { useDispatch } from 'react-redux';\nimport './Chat.css';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat(props) {\n  _s();\n\n  let params = useParams(); // console.log({room:props.location.state.room})\n\n  const [messages, setMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState(\"\");\n  const [room, setRoom] = useState(0);\n  const [getmessages, Setgetmessages] = useState();\n  const sender_user_id = localStorage.getItem('USER-ID');\n  const dispatch = useDispatch(); // setRoom(props.location.state.room);\n  // console.log('room',room)\n\n  const messageEl = useRef();\n  useEffect(() => {\n    async function Load() {\n      console.log(sender_user_id);\n      const pusher = new PusherJs(\"7a885669ff1c6332e7bc\", {\n        cluster: \"eu\"\n      });\n      const formData = new FormData();\n      formData.append(\"room_id\", 3);\n      const response = await fetch(URL_User + \"/getmsg\", {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        },\n        method: \"post\",\n        body: formData\n      });\n      const result = await response.json();\n      console.log('message', result.messages);\n\n      if (result.message === 'You must be logged in') {\n        dispatch(signOutUser());\n      } else {\n        Setgetmessages(result.messages);\n      }\n\n      const channel = pusher.subscribe(\"Chat\" + 3); /// here put room_id\n\n      channel.bind(\"App\\\\Events\\\\NewMessage\", function (data) {\n        setMessages(prev => [...prev, {\n          prev\n        }]);\n      });\n      return () => {\n        pusher.unsubscribe(\"Chat\" + 3);\n      };\n    }\n\n    Load();\n  }, [messages]);\n\n  const sendMsg = async () => {\n    const formData = new FormData();\n    formData.append(\"messages\", messageInput);\n    formData.append(\"room_id\", 3);\n    const response = await fetch(URL_User + \"/postmessages\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n      },\n      method: \"post\",\n      body: formData\n    });\n    setMessageInput(\"\");\n    const result = await response.json();\n  };\n\n  useEffect(() => {\n    if (messageEl) {\n      messageEl.current.addEventListener('DOMNodeInserted', event => {\n        const {\n          currentTarget: target\n        } = event;\n        target.scroll({\n          top: target.scrollHeight,\n          behavior: 'smooth'\n        });\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              id: \"chat_list\",\n              className: \"chat_list\",\n              ref: messageEl,\n              children: getmessages && getmessages.map(msgs => msgs.sender_user.toString() === sender_user_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sent\",\n                id: msgs.id,\n                children: msgs.messages\n              }, msgs.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 51\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"replies\",\n                id: msgs.id,\n                children: msgs.messages\n              }, msgs.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 51\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"chat_tbox\",\n              value: messageInput,\n              className: \"form-control\",\n              placeholder: \"Enter message...\",\n              onChange: event => {\n                setMessageInput(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"go-chat\",\n              value: \"GO\",\n              onClick: event => {\n                event.preventDefault();\n                sendMsg();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"xwTTl+5rM6qONmJMwIVUswY7EgE=\", false, function () {\n  return [useParams, useDispatch];\n});\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/chrishar/Documents/CODI/Final Project/Siverr/frontend/src/components/chats/Chat.js"],"names":["React","useEffect","useRef","useState","PusherJs","URL_User","signOutUser","useDispatch","useParams","Chat","props","params","messages","setMessages","messageInput","setMessageInput","room","setRoom","getmessages","Setgetmessages","sender_user_id","localStorage","getItem","dispatch","messageEl","Load","console","log","pusher","cluster","formData","FormData","append","response","fetch","headers","Authorization","method","body","result","json","message","channel","subscribe","bind","data","prev","unsubscribe","sendMsg","current","addEventListener","event","currentTarget","target","scroll","top","scrollHeight","behavior","map","msgs","sender_user","toString","id","value","preventDefault"],"mappings":"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","sourcesContent":["import React,{useEffect,useRef,useState} from 'react'\nimport PusherJs from 'pusher-js';\nimport { URL_User } from '../URL';\nimport { signOutUser } from '../../redux/action-creators';\nimport { useDispatch } from 'react-redux';\nimport './Chat.css'\n\nimport { useParams } from 'react-router-dom';\nexport default function Chat(props) {\n    let params = useParams();\n    // console.log({room:props.location.state.room})\n   \n\nconst [messages, setMessages] = useState([]);\nconst [messageInput, setMessageInput] = useState(\"\");\nconst [room, setRoom] = useState(0);\nconst [getmessages,Setgetmessages]=useState()\nconst sender_user_id = localStorage.getItem('USER-ID')\nconst dispatch = useDispatch();\n\n// setRoom(props.location.state.room);\n// console.log('room',room)\nconst messageEl = useRef();\n\n\n    useEffect( () => {\n\n      \n\n        async function Load(){\nconsole.log(sender_user_id)\n        \n        \n        const pusher = new PusherJs(\"7a885669ff1c6332e7bc\", {\n            cluster: \"eu\",\n        });\n        \n            const formData = new FormData();\n            formData.append(\"room_id\",3); \n    \n            const response = await fetch(URL_User+\"/getmsg\",\n                {\n                    headers: {\n                        Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n                    },\n                    method: \"post\",\n                    body: formData,\n                }\n            );   \n            const result = await response.json();\n            console.log('message',result.messages);\n           if(result.message==='You must be logged in'){\n            dispatch(signOutUser());\n           }else{\n            Setgetmessages(result.messages);\n        \n           }\n           \n          \n            \n         \n    \n        \n            const channel = pusher.subscribe(\"Chat\" + 3); /// here put room_id\n            channel.bind(\"App\\\\Events\\\\NewMessage\", function (data) {\n                \n                setMessages((prev) => [...prev, {prev}]);\n                \n            });\n            return () => {\n                pusher.unsubscribe(\"Chat\" + 3);\n            };\n        }\n        Load();\n           \n        \n    }, [messages]);\n\n\n    const sendMsg = async () => {\n        const formData = new FormData();\n        formData.append(\"messages\", messageInput);\n        formData.append(\"room_id\", 3); \n\n        const response = await fetch(URL_User+\"/postmessages\", {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`,\n            },\n            method: \"post\",\n            body: formData,\n        }\n        \n        );\n        setMessageInput(\"\");\n      \n        \n        const result = await response.json();\n    \n    }\n\n        useEffect(() => {\n            if (messageEl) {\n              messageEl.current.addEventListener('DOMNodeInserted', event => {\n                const { currentTarget: target } = event;\n                target.scroll({ top: target.scrollHeight, behavior: 'smooth' });\n              });\n            }\n          }, [])\n    return (\n        <div>\n          \n            <div className=\"container\">     \n                          \n                          {/* <div className=\"row no-gutters\"> */}\n                              <div className=\"col-3\">\n                                  {/* <div className=\"card\">\n                                      <div className=\"card-header\">card header</div>\n                                      <div className=\"card-body\">\n                                          <ul id=\"user_list\" className=\"user_list list-group\">\n                                              {this.state.user_list.map((number) =>\n                                              <a href=\"#\">\n                                                \n                                                  <li id={\"user_\"+number.id} onClick={this.loadChats} className=\"list-group-item d-flex justify-content-between align-items-center\" key={'user_'+number.id}>\n                                                      {number.name}\n                                                      <span className=\"badge badge-primary badge-pill\">14</span>\n                                                  </li>\n                                              </a>  )}\n                                          </ul>\n                                      </div>                            \n                                  </div> */}\n                              </div>\n                              <div className=\"col\">\n                                  <div className=\"card\">\n                                      <div className=\"card-header\"></div>\n                                      {/* <div className=\"card-header\">{isAnyUserActive?this.state.active_user[0].name:'no active'}</div> */}\n                                      <div className=\"card-body\">\n                                          <ul id=\"chat_list\"className=\"chat_list\" ref={messageEl}>\n                                           \n                                              {getmessages  && getmessages.map((msgs) => \n                                                    \n                                                  (msgs.sender_user.toString()===sender_user_id)?    \n                                                  <div   className=\"sent\" id={msgs.id} key={msgs.id}>{msgs.messages}</div>                                \n                                                  :\n                                                  <div  className=\"replies\" id={msgs.id} key={msgs.id}>{msgs.messages}</div>\n                                              \n                                              )}\n                                          </ul>\n                                      </div>\n                                      <div className=\"card-footer\">\n                                          <input type=\"text\"  id=\"chat_tbox\" value={messageInput} className=\"form-control\" placeholder=\"Enter message...\" onChange={(event)=>{setMessageInput(event.target.value)}}/>\n                                     \n                                      \n                                          <input type=\"submit\" className=\"go-chat\"  value=\"GO\" onClick={(event)=>{event.preventDefault();sendMsg();}} />\n                                          \n                                      </div>\n                                  </div>\n                              </div>\n                          {/* </div> */}\n                      </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}